{"version":3,"sources":["contexts/CurrentUserContext.js","components/ProtectedRoute.js","components/ProtectedRouteAuth.js","images/logo.svg","components/Access/Access.js","components/Validation/Validation.js","utils/conf.js","components/Register/Register.js","components/Login/Login.js","components/Footer/Footer.js","images/icon-menu.svg","components/Navigation/Navigation.js","components/Popup/Popup.js","components/Header/Header.js","components/Promo/Promo.js","components/NavTab/NavTab.js","components/AboutProject/AboutProject.js","components/Techs/Techs.js","images/photo.jpg","images/arrow.svg","components/GridArea/GridArea.js","components/AboutMe/AboutMe.js","components/Main/Main.js","utils/MainApi.js","components/Preloader/Preloader.js","components/InfoTooltip/InfoTooltip.js","images/union-x.svg","components/MoviesCard/MoviesCard.js","components/MoviesCardList/MoviesCardList.js","images/find.svg","components/SearchForm/SearchForm.js","components/Movies/Movies.js","components/MoviesSaved/MoviesSaved.js","components/Profile/Profile.js","components/PageNotFound/PageNotFound.js","utils/MoviesApi.js","images/union-v.svg","components/App/App.js","reportWebVitals.js","index.js"],"names":["CurrentUser","createContext","ProtectedRoute","props","currentUser","React","useContext","component","to","Access","memo","nextHandleSubmit","greeting","button","isRegistrated","link","messageErr","location","useLocation","history","useHistory","handleForm","useState","errors","setErrors","values","setValues","isValid","setIsValid","handleChange","useCallback","evt","name","target","value","form","closest","validationMessage","elements","length","Object","keys","checkValidity","resetForm","newIsValid","useFormWithValidation","buttonDisabled","setButtonDisabled","useEffect","className","src","logo","onClick","push","alt","onSubmit","preventDefault","id","pathname","type","placeholder","this","onChange","minLength","maxLength","pattern","title","email","password","disabled","config","Register","handleRegistrationSubmit","Login","handleLoginSubmit","Footer","date","Date","href","rel","getFullYear","Navigation","activeClassName","Popup","closePopup","Content","buttonClose","viewportWidth","handleEsc","key","document","addEventListener","removeEventListener","currentTarget","Header","navigationPopup","setNavigationPopup","resolution","window","matchMedia","matches","setViewportWidth","onchange","menuImage","Promo","NavTab","smooth","AboutProject","Techs","GridArea","photo","arrow","AboutMe","Main","apiURL","checkResponse","res","ok","json","Promise","reject","status","statusText","register","a","fetch","credentials","method","headers","body","JSON","stringify","authorize","deleteAuth","getUser","updateUser","addToMyMoviesList","movie","country","director","duration","year","description","trailerLink","nameRU","nameEN","image","url","thumbnail","formats","getMyMovies","deleteFromMyMoviesList","_id","Preloader","InfoTooltip","icon","notification","MoviesCard","incomingMovie","setMovie","setDuration","owner","saved","setSaved","mouseOver","setMouseOver","trailerVisible","setTrailerVisible","videoUrlForPopup","setVideoUrlForPopup","setMessageErr","isSubmitting","setIsSubmitting","infoTooltipOpen","setInfoTooltipOpen","hasEmptyField","setHasEmptyField","console","log","dur","Number","h","Math","floor","m","String","indexOf","split","openPopupErr","err","updateLocalLists","savedMovie","baseMoviesList","parse","sessionStorage","getItem","movieIndex","findIndex","existedMovie","splice","setItem","listOfFound","localStorage","movIndex","myFavoriteMoviesList","concat","index","clickDelete","then","deletedMovie","__v","catch","finally","onMouseOver","onMouseLeave","frameBorder","allowFullScreen","UnionX","MoviesCardList","moviesList","message","moviesToRender","setMoviesToRender","buttonVisible","setButtonVisible","numbers","setNumbers","innerWidth","screenWidth","setScreenWidth","handleResize","setTimeout","max","slice","map","SearchForm","handleSubmitSearchForm","handleCheckboxChange","isCheckboxOn","setIsCheckboxOn","query","setQuery","inputIsEmpty","setInputIsEmpty","e","style","backgroundImage","find","Movies","loggedIn","listForRender","setListForRender","shortListForRender","setShortListForRender","queryString","setQueryString","checkboxActive","setCheckboxActive","setMessage","newList","filter","toLowerCase","newShortList","SavedMovies","setMyFavoriteMoviesList","favoriteListForRender","setFavoriteListForRender","shortFavoriteListForRender","setShortFavoriteListForRender","Profile","handleSubmitUpdateUser","handleLogout","setName","setEmail","wrongName","setWrongName","wrongEmail","setWrongEmail","formNoValidate","PageNotFound","go","MoviesApi","_url","_headers","_checkResponse","moviesApi","App","setCurrentUser","setErr","isAuth","userData","updateMoviesLists","myMoviesArray","getMovies","mainMoviesArray","temporaryList","Provider","exact","path","clear","ProtectedRouteAuth","includes","UnionV","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b7e369e.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const CurrentUser = createContext()","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n\r\n    return (\r\n        <Route>\r\n            {currentUser ? <props.component {...props} /> : <Redirect to='/signin' />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n\r\n    return (\r\n        <Route>\r\n            {!currentUser ? <props.component {...props} /> : <Redirect to='/' />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/logo.c26504b6.svg\";","import {memo, useState, useEffect} from 'react'\r\nimport { Link, useLocation, useHistory } from 'react-router-dom'\r\nimport { useFormWithValidation } from '../Validation/Validation'\r\nimport './Access.css'\r\nimport logo from '../../images/logo.svg'\r\n\r\n\r\nconst Access = memo(({ nextHandleSubmit, greeting, button, isRegistrated, link, messageErr }) => {\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const handleForm = useFormWithValidation()\r\n  const [buttonDisabled, setButtonDisabled] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    handleForm.isValid ? setButtonDisabled(false) : setButtonDisabled(true)\r\n  }, [handleForm.isValid])\r\n\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault()\r\n    nextHandleSubmit(handleForm.values)\r\n    handleForm.resetForm()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='access'>\r\n      <div className='access__top'>\r\n        <img className='logo' src={logo} onClick={() => history.push('/')} alt='логотип' />\r\n        <h2 className='access__title'>{greeting}</h2>\r\n      </div>\r\n\r\n      <form className='access__form' onSubmit={handleSubmit} id='access'>\r\n        {location.pathname === '/signup' &&\r\n          <>\r\n            <label className='access__label'>Name\r\n              <input\r\n                id='name'\r\n                name='name'\r\n                type='text'\r\n                placeholder='name'\r\n                className={`access__input ${handleForm.errors.name && 'access__input_wrong'}`}\r\n                value={handleForm.values.this}\r\n                onChange={handleForm.handleChange}\r\n                // formNoValidate\r\n                minLength='2'\r\n                maxLength='30'\r\n                pattern='^[A-Za-zА-Яа-яЁё\\s\\-]{2,30}$'\r\n                title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n              />\r\n            </label>\r\n            {\r\n              handleForm.errors.name &&\r\n              <span className='access__input-error'>{handleForm.errors.name}</span>\r\n            }\r\n          </>\r\n        }\r\n\r\n        <label className='access__label'>E-mail\r\n          <input\r\n            id='email'\r\n            name='email'\r\n            type='email'\r\n            placeholder='e-mail'\r\n            className={`access__input ${handleForm.errors.email && 'access__input_wrong'}`}\r\n            value={handleForm.values.this}\r\n            onChange={handleForm.handleChange}\r\n            // formNoValidate\r\n            pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n            title=\"поле должно содержать формат электронного адреса\"\r\n          />\r\n        </label>\r\n        {\r\n          handleForm.errors.email &&\r\n          <span className='access__input-error'>{handleForm.errors.email}</span>\r\n        }\r\n\r\n        <label className='access__label'>Password\r\n          <input\r\n            id='password'\r\n            name='password'\r\n            type='password'\r\n            placeholder='password'\r\n            className={`access__input ${handleForm.errors.password && 'access__input_wrong'}`}\r\n            value={handleForm.values.this}\r\n            onChange={handleForm.handleChange}\r\n            // formNoValidate\r\n            minLength='6'\r\n            maxLength='30'\r\n            title=\"поле должно содержать не менее 6 и не более 30 знаков\"\r\n          />\r\n        </label>\r\n        {\r\n          handleForm.errors.password &&\r\n          <span className='access__input-error'>{handleForm.errors.password}</span>\r\n        }\r\n\r\n      </form>\r\n\r\n      <div className='access__bottom'>\r\n        {messageErr &&\r\n          <p className=\"access__message\">{messageErr}</p>}\r\n\r\n        <button\r\n          className={`access__submit ${buttonDisabled && 'access__submit_disabled'}`}\r\n          form='access'\r\n          disabled={buttonDisabled}\r\n          type='submit'\r\n        >\r\n          {button}\r\n        </button>\r\n\r\n        <p className='access__is-registrated'>{isRegistrated}\r\n          <Link\r\n            to={location.pathname === '/signin' ? '/signup' : '/signin'}\r\n            className='access__link'\r\n            target='_self'\r\n          >\r\n            {link}\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Access\r\n","import { useCallback, useState } from \"react\";\r\n\r\n//хук управления и валидации формы\r\nexport const useFormWithValidation = () => {\r\n\r\n  const [errors, setErrors] = useState({})\r\n  const [values, setValues] = useState({});\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n\r\n  const handleChange = useCallback((evt) => {\r\n    const name = evt.target.name\r\n    const value = evt.target.value\r\n    const form = evt.target.closest(\"form\")\r\n    setValues({ ...values, [name]: value })\r\n    setErrors({ ...errors, [name]: evt.target.validationMessage })\r\n    // если колич. элементов формы минус 1 (т.е. button) === длине массива инпутов\r\n    if ((form.elements.length - 1) === Object.keys(values).length) {\r\n      // checkValidity возвр. true-false\r\n      setIsValid(form.checkValidity())\r\n    }\r\n  },\r\n    [errors, values]\r\n  )\r\n\r\n  const resetForm = useCallback((newErrors = {}, newIsValid = false) => {\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  },\r\n    // useCallback вернёт мемоиз-ю версию колбэка при изме одной из зависимостей\r\n    [setErrors, setIsValid] // зависимости\r\n  )\r\n\r\n  return { values, handleChange, errors, isValid, resetForm };\r\n}","export const config = {\r\n    mainTitle: 'Educational project of a student of the Faculty of Web Development.',\r\n    aboutMeName: 'Yury Avdeev',\r\n    aboutMeInfo: 'Frontend developer, 43',\r\n    aboutMeText: 'I live in Moscow and soon I will move to Bulgaria. I have a higher legal education, but the main segment of my professional career is connected with the construction industry. I have a wife and four beautiful children. I enjoy watching good movies, reading good books and traveling with my family. Already in adulthood, I discovered my favorite business - web development and now I can combine my favorite hobby with my favorite work. I love using Vue and React in my work - these are amazing technologies with incredible possibilities in web development.',\r\n    login: {\r\n        greeting: 'Welcome!',\r\n        button: 'Login',\r\n        isRegistrated: 'Not registered yet?',\r\n        link: 'Registration'\r\n    },\r\n    register: {\r\n        greeting: 'Welcome!',\r\n        button: 'Register',\r\n        isRegistrated: 'Already registered?',\r\n        link: 'Login'\r\n    },\r\n}\r\n","import { memo } from 'react'\r\nimport Access from '../Access/Access'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Register = memo(({ handleRegistrationSubmit, messageErr }) => {\r\n  return (\r\n    <Access\r\n      nextHandleSubmit={handleRegistrationSubmit}\r\n      greeting={config.register.greeting}\r\n      button={config.register.button}\r\n      isRegistrated={config.register.isRegistrated}\r\n      link={config.register.link}\r\n      messageErr={messageErr}\r\n    />\r\n  )\r\n})\r\n\r\nexport default Register\r\n","import { memo } from 'react'\r\nimport Access from '../Access/Access'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Login = memo(({ handleLoginSubmit, messageErr }) => {\r\n  return (\r\n    <Access\r\n      nextHandleSubmit={handleLoginSubmit}\r\n      greeting={config.login.greeting}\r\n      button={config.login.button}\r\n      isRegistrated={config.login.isRegistrated}\r\n      link={config.login.link}\r\n      messageErr={messageErr}\r\n    />\r\n  )\r\n})\r\n\r\nexport default Login","import { memo } from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = memo(() => {\r\n  const date = new Date()\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <h4 className='footer__information'>Educational project Yandex.Practicum х BeatFilm.</h4>\r\n      <ul className='footer__links-list'>\r\n        <li className='footer__list-item'>\r\n          <a className='footer__link' href='https://practicum.yandex.ru' target='_blank' rel='noreferrer'>\r\n            Yandex.Practicum\r\n          </a>\r\n        </li>\r\n        <li className='footer__list-item'>\r\n          <a className='footer__link' href='https://github.com' target='_blank' rel='noreferrer'>Github</a>\r\n        </li>\r\n        <li className='footer__list-item'>\r\n          <a className='footer__link' href='https://www.facebook.com' target='_blank' rel='noreferrer'>Facebook</a>\r\n        </li>\r\n      </ul>\r\n      <p className='footer__copyright'>&copy; {date.getFullYear()}</p>\r\n    </footer>\r\n  )\r\n})\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/icon-menu.4b1de763.svg\";","import { memo } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nconst Navigation = memo(() => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <div className='navigation'>\r\n\r\n      <nav className='navigation__container'>\r\n        <NavLink to='/' className={`navigation__link navigation__link_main  ${location.pathname === '/' && 'navigation__link_active'}`} target='_self'>\r\n          Main\r\n        </NavLink>\r\n        <NavLink to='/movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n          Movies\r\n        </NavLink>\r\n        <NavLink to='/saved-movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n          Saved Movies\r\n        </NavLink>\r\n      </nav>\r\n\r\n      <div className='navigation__account-container'>\r\n        <NavLink to='/profile' className='navigation__account-link' activeClassName='navigation__link_active' target='_self'>\r\n          Account\r\n        </NavLink>\r\n        <div className='navigation__account-image'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Navigation\r\n","import { useEffect } from 'react'\r\nimport './Popup.css'\r\n\r\nconst Popup = (({ closePopup, Content, buttonClose, viewportWidth }) => {\r\n  const handleFieldClick = (evt) => {\r\n    evt.target === evt.currentTarget && closePopup()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (evt) => {\r\n      evt.key === 'Escape' && closePopup()\r\n    }\r\n    viewportWidth && closePopup()\r\n    document.addEventListener('keyup', handleEsc)\r\n    return () => {\r\n      document.removeEventListener('keyup', handleEsc)\r\n    }\r\n  }, [closePopup, viewportWidth])\r\n\r\n\r\n  return (\r\n    <div className='popup' onClick={handleFieldClick}>\r\n      {\r\n        buttonClose &&\r\n        <button className='popup__close' type='button' onClick={closePopup}></button>\r\n      }\r\n      {Content}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Popup\r\n","import { memo, useContext, useState, useEffect } from 'react'\r\nimport { useLocation, useHistory, Link } from 'react-router-dom'\r\nimport './Header.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menuImage from '../../images/icon-menu.svg'\r\nimport Navigation from '../Navigation/Navigation'\r\nimport Popup from '../Popup/Popup'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\n\r\nconst Header = memo(() => {\r\n  const currentUser = useContext(CurrentUser)\r\n  const location = useLocation() // или > { pathname } = useLocation()\r\n  const history = useHistory()\r\n  const [navigationPopup, setNavigationPopup] = useState(false)\r\n  const resolution = window.matchMedia('(min-width: 800px)') // медиа-запрос в конст., возвр. объект\r\n  const [viewportWidth, setViewportWidth] = useState(resolution.matches) // св-во объекта ответа - true - если document сейчас соот-т медиа-запросу\r\n\r\n\r\n  useEffect(() => {\r\n    resolution.onchange = () => { // переход через 800рх\r\n      resolution.matches ? // => true / false\r\n        setViewportWidth(true)\r\n        :\r\n        setViewportWidth(false)\r\n    }\r\n    return resolution.onchange\r\n  }, [resolution])\r\n\r\n\r\n  const openPopup = () => {\r\n    setNavigationPopup(true)\r\n  }\r\n\r\n\r\n  const closePopup = () => {\r\n    setNavigationPopup(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <header className={`header ${location.pathname === '/' && 'header__type_color'}`}>\r\n\r\n      <div className='header__wrap'>\r\n        <img className='logo' src={logo} onClick={() => history.push('/')} alt='логотип' />\r\n        {\r\n          !currentUser ?\r\n            <nav className='header__nav-container'>\r\n              <Link to='/signup' className='header__link_word' target='_self'>Registration</Link>\r\n              <Link to='/signin' className='header__link_button' target='_self'>Login</Link>\r\n            </nav>\r\n            :\r\n            <>\r\n              {viewportWidth ?\r\n                <Navigation />\r\n                :\r\n                <img className='header__nav-icon' src={menuImage} alt='иконка меню' onClick={openPopup} />\r\n              }\r\n            </>\r\n        }\r\n        {\r\n          navigationPopup &&\r\n          <Popup\r\n            closePopup={closePopup}\r\n            Content={<Navigation />}\r\n            buttonClose={true}\r\n            viewportWidth={viewportWidth}\r\n          />\r\n        }\r\n      </div>\r\n\r\n    </header >\r\n  )\r\n})\r\n\r\nexport default Header\r\n","import { memo } from 'react'\r\nimport './Promo.css'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Promo = memo(() => {\r\n  return (\r\n    <section className='promo'>\r\n      <h1 className='promo__titile'>{config.mainTitle}</h1>\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default Promo\r\n","import { memo } from 'react'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport './NavTab.css'\r\n\r\nconst NavTab = memo(() => {\r\n  return (\r\n    <nav className='nav-tab'>\r\n      <HashLink smooth to='/#about-project' className='nav-tab__link'>\r\n        About project\r\n      </HashLink>\r\n      <HashLink smooth to='/#techs' className='nav-tab__link'>\r\n        Technologies\r\n      </HashLink>\r\n      <HashLink smooth to='/#about-me' className='nav-tab__link'>\r\n        About me\r\n      </HashLink>\r\n    </nav>\r\n  )\r\n})\r\n\r\nexport default NavTab\r\n","import { memo } from 'react'\r\nimport './AboutProject.css'\r\n\r\nconst AboutProject = memo(() => {\r\n  return (\r\n    <section className='project' id='about-project'>\r\n      <h2 className='project__title'>About project</h2>\r\n\r\n      <ul className='project__about-list'>\r\n        <li className='project__about-list-item'>\r\n          <h3 className='project__about-list-title'>\r\n            This project included 5 stages\r\n          </h3>\r\n          <p className='project__about-list-text'>\r\n            Drawing up a plan, working on the backend, layout, adding functionality and final improvements.\r\n          </p>\r\n        </li>\r\n        <li className='project__about-list-item'>\r\n          <h3 className='project__about-list-title'>\r\n            It took 5 weeks to complete the project\r\n          </h3>\r\n          <p className='project__about-list-text'>\r\n            Each stage had soft and hard deadlines that had to be met in order to successfully defend.\r\n          </p>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className='project__terms-list'>\r\n        <li className='project__terms-list-item'>\r\n          <div className='project__terms-list-term project__terms-list-term_color'>1 week</div>\r\n          <p className='project__terms-list-description'>Back-end</p>\r\n        </li>\r\n        <li className='project__terms-list-item'>\r\n          <div className='project__terms-list-term'>4 weeks</div>\r\n          <p className='project__terms-list-description'>Front-end</p>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default AboutProject\r\n","import './Techs.css'\r\n\r\nconst Techs = () => {\r\n  return (\r\n    <section className='techs' id='techs'>\r\n      <div className='techs__wrap'>\r\n        <h2 className='techs__title'>Technologies</h2>\r\n        <h3 className='techs__subtitle'>7 technologies</h3>\r\n        <p className='techs__text'>\r\n          On the web development course, we mastered the technologies that we used in the graduation project.\r\n        </p>\r\n        < div className='techs__container'>\r\n          <div className='techs__tech-icon'>HTML</div>\r\n          <div className='techs__tech-icon'>CSS</div>\r\n          <div className='techs__tech-icon'>JS</div>\r\n          <div className='techs__tech-icon'>React</div>\r\n          <div className='techs__tech-icon'>Git</div>\r\n          <div className='techs__tech-icon'>Express.js</div>\r\n          <div className='techs__tech-icon'>mongoDB</div>\r\n        </div>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Techs\r\n","export default __webpack_public_path__ + \"static/media/photo.399c6b2c.jpg\";","export default __webpack_public_path__ + \"static/media/arrow.ceb3ba2e.svg\";","import { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './GridArea.css'\r\nimport photo from '../../images/photo.jpg'\r\nimport arrow from '../../images/arrow.svg'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst GridArea = memo(() => {\r\n  return (\r\n    <article className='grid-area'>\r\n      <img className='grid-area__photo' src={photo} alt='Фото пользователя' />\r\n      <div className='grid-area__info'>\r\n        <h3 className='grid-area__info-name'>{config.aboutMeName}</h3>\r\n        <h4 className='grid-area__info-about'>{config.aboutMeInfo}</h4>\r\n        <p className='grid-area__info-text'>{config.aboutMeText}</p>\r\n        <ul className='grid-area__info-links-list'>\r\n          <li className='grid-area__links-item'>\r\n            <Link\r\n              to={{ pathname: 'https://www.facebook.com/profile.php?id=100073423737405' }}\r\n              className='grid-area__info-link'\r\n              target='_blank'>\r\n              Facebook\r\n            </Link>\r\n          </li>\r\n          <li className='grid-area__links-item'>\r\n            <Link\r\n              to={{ pathname: 'https://github.com/yuryavdeev' }}\r\n              className='grid-area__info-link'\r\n              target='_blank'>\r\n              Github\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className='grid-area__portfolio'>\r\n        <h3 className='grid-area__portfolio-title'>Portfolio</h3>\r\n        <ul className='grid-area__portfolio-links-list'>\r\n          <li className='grid-area__links-item'>\r\n            <p className='grid-area__portfolio-name'>Adaptive site (React, mobile first)</p>\r\n            <Link\r\n              to={{ pathname: 'https://yuryavdeev.github.io/events-calendar/' }}\r\n              className='grid-area__portfolio-link'\r\n              target='_blank'\r\n            >\r\n              <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n            </Link>\r\n          </li>\r\n          <hr className='grid-area__portfolio-border'></hr>\r\n          <li className='grid-area__links-item'>\r\n            <p className='grid-area__portfolio-name'>Site with a block of filters (React)</p>\r\n            <Link\r\n              to={{ pathname: 'https://yuryavdeev.github.io/avia-search' }}\r\n              className='grid-area__portfolio-link'\r\n              target='_blank'\r\n            >\r\n              <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n            </Link>\r\n          </li>\r\n          <hr className='grid-area__portfolio-border'></hr>\r\n          <li className='grid-area__links-item'>\r\n            <p className='grid-area__portfolio-name'>Site with Vue and Nuxt (SSR)</p>\r\n            <Link\r\n              to={{ pathname: 'https://banks-requests.web.app' }}\r\n              className='grid-area__portfolio-link'\r\n              target='_blank'\r\n            >\r\n              <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </article >\r\n  )\r\n})\r\n\r\nexport default GridArea\r\n","import { memo } from 'react'\r\nimport './AboutMe.css'\r\nimport GridArea from '../GridArea/GridArea'\r\n\r\nconst AboutMe = memo(() => {\r\n\r\n  return (\r\n    <section className='about-me' id='about-me'>\r\n      <h2 className='about-me__title'>About me</h2>\r\n      <GridArea />\r\n    </section >\r\n  )\r\n})\r\n\r\nexport default AboutMe\r\n","import { memo } from 'react'\r\n\r\nimport './Main.css'\r\nimport Header from '../Header/Header'\r\nimport Promo from '../Promo/Promo'\r\nimport NavTab from '../NavTab/NavTab'\r\nimport AboutProject from '../AboutProject/AboutProject'\r\nimport Techs from '../Techs/Techs'\r\nimport AboutMe from '../AboutMe/AboutMe'\r\n\r\nconst Main = memo(() => {\r\n  return (\r\n    <section className='main'>\r\n      <Header />\r\n      <Promo />\r\n      <NavTab />\r\n      <AboutProject />\r\n      <Techs />\r\n      <AboutMe />\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default Main","const apiURL = 'https://api.avdeev.movies.nomoredomains.monster';\r\n// const apiURL = 'http://localhost:3000';\r\n\r\nconst checkResponse = (res) => {\r\n    return res.ok ?\r\n        res.json()\r\n        :\r\n        Promise.reject(`код ${res.status}: ${res.statusText}`);\r\n}\r\n\r\nexport const register = async ({ name, email, password }) => {\r\n    const res = await fetch(`${apiURL}/signup`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const authorize = async ({ email, password }) => {\r\n    const res = await fetch(`${apiURL}/signin`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const deleteAuth = async () => {\r\n    const res = await fetch(`${apiURL}/signout`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\n\r\nexport const getUser = async () => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const updateUser = async ({ name, email }) => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const addToMyMoviesList = async (movie) => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            trailerLink: movie.trailerLink,\r\n            id: movie.id,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n            image: movie.image.url ?\r\n                `https://api.nomoreparties.co${movie.image.url}`\r\n                :\r\n                movie.image,\r\n            thumbnail: movie.thumbnail ?\r\n                movie.thumbnail\r\n                :\r\n                `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const getMyMovies = async () => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const deleteFromMyMoviesList = async (_id) => {\r\n    const res = await fetch(`${apiURL}/movies/${_id}`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n","import './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <div className='preloader__container'>\r\n        <span className='preloader__round'></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n","import Popup from '../Popup/Popup'\r\nimport './InfoTooltip.css'\r\n\r\nfunction InfoTooltip({ closePopup, icon, notification }) {\r\n  return (\r\n    <Popup\r\n      closePopup={closePopup}\r\n      Content={\r\n        <div className='info-tooltip__container'>\r\n          <img className='info-tooltip__image' src={icon} alt={notification} />\r\n          <p className='info-tooltip__notification'>{notification}</p>\r\n        </div>\r\n      }\r\n      buttonClose={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default InfoTooltip\r\n","export default __webpack_public_path__ + \"static/media/union-x.d4ce2a26.svg\";","import { memo, useContext, useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCard.css'\r\nimport Popup from '../Popup/Popup'\r\nimport { addToMyMoviesList, deleteFromMyMoviesList } from '../../utils/MainApi'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\nconst MoviesCard = memo(({ incomingMovie }) => {\r\n  const currentUser = useContext(CurrentUser)\r\n  const location = useLocation()\r\n  const [movie, setMovie] = useState(incomingMovie)\r\n  const [duration, setDuration] = useState('')\r\n  const [saved, setSaved] = useState(movie.owner === currentUser._id)\r\n  const [mouseOver, setMouseOver] = useState(false)\r\n  const [trailerVisible, setTrailerVisible] = useState(false)\r\n  const [videoUrlForPopup, setVideoUrlForPopup] = useState('')\r\n  const [messageErr, setMessageErr] = useState('')\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false)\r\n  const [hasEmptyField, setHasEmptyField] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    for (const key in movie) {\r\n      if (movie[key] === '' || movie[key] === null) {\r\n        console.log(`Пустое поле ${key} у фильма - ${movie.nameRU}`)\r\n        setHasEmptyField(key)\r\n      }\r\n    }\r\n  }, [movie])\r\n\r\n\r\n  useEffect(() => {\r\n    const dur = Number(movie.duration)\r\n    const h = Math.floor(dur / 60)\r\n    const m = Math.floor(dur % 60)\r\n    setDuration(`${h}ч ${m}м`)\r\n  }, [movie.duration])\r\n\r\n\r\n  useEffect(() => {\r\n    if (hasEmptyField === 'trailerLink' || String(movie.trailerLink).indexOf('http') < 0) {\r\n      setHasEmptyField('trailerLink') // для != http...\r\n      setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n    } else {\r\n      String(movie.trailerLink).indexOf('v=') > -1 &&\r\n        setVideoUrlForPopup(String(movie.trailerLink).split('v=')[1])\r\n    }\r\n  }, [hasEmptyField, movie.trailerLink])\r\n\r\n\r\n  const openPopupErr = (err) => {\r\n    setMessageErr(`В ответе на Ваш запрос сервером возвращена ошибка - ${err}`)\r\n    setInfoTooltipOpen(true)\r\n  }\r\n\r\n\r\n  const showTrailer = () => {\r\n    !messageErr ? setTrailerVisible(true) : setInfoTooltipOpen(true)\r\n  }\r\n\r\n\r\n  const closePopup = () => {\r\n    setTrailerVisible(false)\r\n    setInfoTooltipOpen(false)\r\n  }\r\n\r\n\r\n  const updateLocalLists = (savedMovie) => {\r\n    // осн. список фильмов - для корр. отображения лайков на /movies после нового поиска\r\n    const baseMoviesList = JSON.parse(sessionStorage.getItem('baseMoviesList'))\r\n    const movieIndex = baseMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id)\r\n    // начиная с movieIndex удалить 1 элемент и заменить его в baseMoviesList:\r\n    baseMoviesList.splice(movieIndex, 1, savedMovie)\r\n    // обновил список фильмов в sessionStorage\r\n    sessionStorage.setItem('baseMoviesList', JSON.stringify(baseMoviesList))\r\n\r\n    // список фильмов после поиска - для корр. загрузки на /movies после возврата\r\n    let listOfFound = JSON.parse(localStorage.getItem('listOfFound'))\r\n    const movIndex = listOfFound.findIndex(existedMovie => existedMovie.id === savedMovie.id)\r\n    listOfFound.splice(movIndex, 1, savedMovie)\r\n    localStorage.setItem('listOfFound', JSON.stringify(listOfFound))\r\n\r\n    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n    // function union(arr1, arr2) {\r\n    //     let _union = new Set(arr1)\r\n    //     for (let elem of arr2) {\r\n    //         _union.add(elem)\r\n    //     }\r\n    //     return _union\r\n    // }\r\n    // console.log(union([1, 2, 3, 4, 5], [4, 5, 6, 7]))\r\n    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n    // список фильмов из избранного - для правильного отображения на /saved-movies после изменений списка на /movies\r\n    let myFavoriteMoviesList = JSON.parse(localStorage.getItem('myFavoriteMoviesList'))\r\n    // сохраняемый фильм =>\r\n    if (savedMovie.owner === currentUser._id) {\r\n      myFavoriteMoviesList = myFavoriteMoviesList.concat(savedMovie) // добавил\r\n      localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myFavoriteMoviesList)) // сохранил\r\n    }\r\n    // удаляемый фильм =>\r\n    else {\r\n      const index = myFavoriteMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id) // <= индекс\r\n      myFavoriteMoviesList.splice(index, 1) // <= удалил\r\n      localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myFavoriteMoviesList)) // сохранил\r\n    }\r\n  }\r\n\r\n\r\n  const clickSaved = () => {\r\n    if (hasEmptyField) {\r\n      setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n      setInfoTooltipOpen(true)\r\n    } else {\r\n      setIsSubmitting(true)\r\n      addToMyMoviesList(movie)\r\n        .then((savedMovie) => {\r\n          setSaved(true)\r\n          setMovie(savedMovie)\r\n          updateLocalLists(savedMovie)\r\n        })\r\n        .catch((err) => openPopupErr(err))\r\n        .finally(() => setIsSubmitting(false))\r\n    }\r\n  }\r\n\r\n\r\n  const clickDelete = () => {\r\n    setIsSubmitting(true)\r\n    deleteFromMyMoviesList(movie._id)\r\n      .then((deletedMovie) => {\r\n        const { owner, _id, __v, ...savedMovie } = deletedMovie // => объект фильма savedMovie без __v, owner и _id\r\n        updateLocalLists(savedMovie)\r\n        setSaved(false)\r\n        location.pathname === '/saved-movies' ?\r\n          setMovie('')\r\n          :\r\n          setMovie(savedMovie)\r\n      })\r\n      .catch((err) => openPopupErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  return (\r\n    movie &&  // <= если удалил из избранного\r\n    <section className='movie'>\r\n      {\r\n        (videoUrlForPopup || messageErr) ?\r\n          <img\r\n            className='movie__image'\r\n            onClick={() => showTrailer()}\r\n            onMouseOver={() => setMouseOver(true)}\r\n            onMouseLeave={() => setMouseOver(false)}\r\n            // при обратном сохранении api вернул movie.image без url\r\n            src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n            alt='карточка фильма'\r\n          />\r\n          :\r\n          <a className='movie__trailer-link' href={movie.trailerLink} target='_blank' rel='noreferrer'>\r\n            <img\r\n              className='movie__image'\r\n              onMouseOver={() => setMouseOver(true)}\r\n              onMouseLeave={() => setMouseOver(false)}\r\n              src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n              alt='карточка фильма'\r\n            />\r\n          </a>\r\n      }\r\n\r\n      <div className='movie__bottom-container'>\r\n        <h3 className='movie__caption'>{movie.nameRU}</h3>\r\n        <p className='movie__duration'>{duration}</p>\r\n      </div>\r\n\r\n      {\r\n        location.pathname === '/saved-movies' ?\r\n          <button\r\n            className={`movie__favorites movie__favorites_delete ${mouseOver && 'movie__favorites_delete-active'}`}\r\n            onMouseOver={() => setMouseOver(true)}\r\n            onMouseLeave={() => setMouseOver(false)}\r\n            onClick={clickDelete}\r\n            aria-label='удаление из избранного'\r\n          >\r\n          </button>\r\n          :\r\n          saved ?\r\n            <button\r\n              className='movie__favorites movie__favorites_true'\r\n              onClick={clickDelete}\r\n              aria-label='удаление из избранного'\r\n            >\r\n            </button>\r\n            :\r\n            <button\r\n              className=\r\n              {`movie__favorites movie__favorites_false ${mouseOver && 'movie__favorites_false-active'} ${saved && 'movie__favorites_hidden'}`}\r\n              onMouseOver={() => setMouseOver(true)}\r\n              onClick={clickSaved}\r\n              aria-label='добавить в избранное'\r\n            >\r\n              Сохранить\r\n            </button>\r\n      }\r\n\r\n      {\r\n        trailerVisible &&\r\n        <Popup\r\n          closePopup={closePopup}\r\n          buttonClose={true}\r\n          Content={\r\n            <div className='movie__trailer-container'>\r\n              <iframe\r\n                className='movie__trailer'\r\n                title='trailer-video'\r\n                type='text/html'\r\n                src={`https://www.youtube.com/embed/${videoUrlForPopup}`}\r\n                frameBorder='0'\r\n                allowFullScreen>\r\n              </iframe>\r\n            </div>\r\n          }\r\n        />\r\n      }\r\n\r\n      {isSubmitting && <Preloader />}\r\n\r\n      {\r\n        infoTooltipOpen &&\r\n        <InfoTooltip\r\n          closePopup={closePopup}\r\n          icon={UnionX}\r\n          notification={messageErr}\r\n        />\r\n      }\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default MoviesCard\r\n","import {memo, useEffect, useState} from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCardList.css'\r\nimport MoviesCard from '../MoviesCard/MoviesCard'\r\n\r\nconst MoviesCardList = memo(({ moviesList, message }) => {\r\n  const location = useLocation()\r\n  const [moviesToRender, setMoviesToRender] = useState([])\r\n  const [buttonVisible, setButtonVisible] = useState(true)\r\n  const [numbers, setNumbers] = useState(0)\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth)\r\n\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setScreenWidth(window.innerWidth)\r\n    }\r\n\r\n    location.pathname === '/movies' &&\r\n      window.addEventListener('resize', () => setTimeout(handleResize, 500))\r\n\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [location.pathname])\r\n\r\n\r\n  useEffect(() => {\r\n    setButtonVisible(true)\r\n    location.pathname === '/saved-movies'\r\n      ?\r\n      setNumbers(moviesList.length)\r\n      :\r\n      setNumbers(\r\n        (screenWidth >= 1137) ?\r\n          3\r\n          :\r\n          (screenWidth < 768) ?\r\n            1\r\n            :\r\n            2\r\n      )\r\n  }, [location.pathname, moviesList, screenWidth])\r\n\r\n  // numbers на первой загрузке и увеличении ширины экрана (зависимость) => отрисовать мин (3, 2, 1) или макс (своё значение)\r\n  useEffect(() => {\r\n    location.pathname === '/movies'\r\n      &&\r\n      setNumbers(\r\n        screenWidth >= 1137 ?\r\n          Math.max(3, numbers)\r\n          :\r\n          screenWidth < 768 ?\r\n            numbers\r\n            :\r\n            Math.max(2, numbers)\r\n      )\r\n  }, [location.pathname, numbers, screenWidth])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setMoviesToRender(\r\n      moviesList.slice(0, numbers).map(movie =>\r\n        <MoviesCard\r\n          key={movie.id}\r\n          incomingMovie={movie}\r\n        />\r\n      )\r\n    )\r\n    moviesList.length <= numbers && setButtonVisible(false)\r\n\r\n  }, [moviesList, numbers])\r\n\r\n\r\n  const addMoviesToScreen = () => {\r\n    setNumbers(\r\n      screenWidth >= 1137 ?\r\n        numbers + 3\r\n        :\r\n        numbers + 2\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='movies-card-list'>\r\n      {\r\n        message ?\r\n          <p className=\"movies-card-list__message\">{message}</p>\r\n          :\r\n          <div className='movies-card-list__grid'>\r\n            {moviesToRender}\r\n          </div>\r\n      }\r\n      {\r\n        buttonVisible &&\r\n        !message &&\r\n        <button className='movies-card-list__button' onClick={addMoviesToScreen}>Ещё</button>\r\n      }\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default MoviesCardList\r\n","export default __webpack_public_path__ + \"static/media/find.0fcf493f.svg\";","import { memo, useState } from 'react'\r\nimport './SearchForm.css'\r\nimport find from '../../images/find.svg'\r\n\r\nconst SearchForm = memo(({ handleSubmitSearchForm, handleCheckboxChange }) => {\r\n\r\n  const [isCheckboxOn, setIsCheckboxOn] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [inputIsEmpty, setInputIsEmpty] = useState(false)\r\n\r\n  const handleInput = (e) => {\r\n    setQuery(e.target.value)\r\n    setInputIsEmpty(false)\r\n  }\r\n\r\n  const listenCheckbox = () => {\r\n    handleCheckboxChange(!isCheckboxOn)\r\n    setIsCheckboxOn(!isCheckboxOn)\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    !query\r\n      ?\r\n      setInputIsEmpty(true)\r\n      :\r\n      handleSubmitSearchForm(query)\r\n  }\r\n\r\n  return (\r\n    <section className='search-container'>\r\n\r\n      <form className='search__form' onSubmit={handleSubmit}>\r\n        <label className='search__label-input'>\r\n          <input\r\n            className='search__input'\r\n            placeholder='Movies'\r\n            onChange={handleInput}\r\n            value={query}\r\n            type='text'\r\n          />\r\n        </label>\r\n        {\r\n          inputIsEmpty &&\r\n          <span className='search__input-error'>Keyword required</span>\r\n        }\r\n        <button\r\n          className='search__button'\r\n          type='submit'\r\n          style={{ backgroundImage: `url(${find})` }}\r\n        >\r\n        </button>\r\n        <hr className='search__border-line' />\r\n        <label className='search__label-checkbox'>Short films\r\n          <input\r\n            className='search__checkbox'\r\n            type='checkbox'\r\n            onChange={listenCheckbox}\r\n          />\r\n          <span className='search__checkbox-visible'></span>\r\n        </label>\r\n      </form>\r\n\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default SearchForm","import { memo, useState, useEffect } from 'react'\r\nimport './Movies.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst Movies = memo(({ loggedIn }) => {\r\n  // const [baseMoviesList, setBaseMoviesList] = useState([])\r\n  const [listForRender, setListForRender] = useState([])\r\n  const [shortListForRender, setShortListForRender] = useState([])\r\n  const [queryString, setQueryString] = useState('')\r\n  const [checkboxActive, setCheckboxActive] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false)\r\n\r\n\r\n  // при возврате - для отрисовки прошлого поиска\r\n  useEffect(() => {\r\n    localStorage.listOfFound && setListForRender(JSON.parse(localStorage.getItem('listOfFound')))\r\n  }, [checkboxActive])\r\n\r\n\r\n  // обработка запроса от формы поиска - в отд. компонент с MoviesSaved - ?\r\n  useEffect(() => {\r\n    if (queryString) {\r\n      const newList = JSON.parse(sessionStorage.getItem('baseMoviesList')).filter((movie) =>\r\n        movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n      if (newList.length) {\r\n        setListForRender(newList)\r\n        localStorage.setItem('listOfFound', JSON.stringify(newList)) // в localStorage <= для отрисовки при возврате\r\n      } else {\r\n        setMessage('Ничего не найдено')\r\n      }\r\n    }\r\n  }, [queryString, checkboxActive])\r\n\r\n\r\n  // обработка чекбокса - после поиска\r\n  useEffect(() => {\r\n    if (checkboxActive && listForRender.length) {\r\n      const newShortList = listForRender.filter(movie => movie.duration <= 40)\r\n      newShortList.length ?\r\n        setShortListForRender(newShortList) : setMessage('Ничего не найдено')\r\n    } else {\r\n      setShortListForRender([])\r\n    }\r\n  }, [checkboxActive, listForRender])\r\n\r\n\r\n  const handleSubmitSearchForm = (query) => {\r\n    setMessage('')\r\n    setQueryString(query)\r\n  }\r\n\r\n\r\n  const handleCheckboxChange = (isCheckboxOn) => {\r\n    setMessage('')\r\n    setCheckboxActive(isCheckboxOn)\r\n  }\r\n\r\n\r\n  const closeInfoTooltip = () => {\r\n    setInfoTooltipOpen(false)\r\n    setMessage('')\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='movies'>\r\n      <Header\r\n        loggedIn={loggedIn}\r\n      />\r\n\r\n      <SearchForm\r\n        handleSubmitSearchForm={handleSubmitSearchForm}\r\n        handleCheckboxChange={handleCheckboxChange}\r\n      />\r\n\r\n      {\r\n        infoTooltipOpen ?\r\n          <InfoTooltip\r\n            closePopup={closeInfoTooltip}\r\n            icon={UnionX}\r\n            notification={message}\r\n          />\r\n          :\r\n          <MoviesCardList\r\n            moviesList={\r\n              shortListForRender.length ?\r\n                shortListForRender\r\n                :\r\n                listForRender\r\n            }\r\n            message={message}\r\n          />\r\n      }\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default Movies\r\n","import {memo, useEffect, useState} from 'react'\r\n\r\nimport './MoviesSaved.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst SavedMovies = memo(({ loggedIn }) => {\r\n  const [myFavoriteMoviesList, setMyFavoriteMoviesList] = useState([])\r\n  const [favoriteListForRender, setFavoriteListForRender] = useState([])\r\n  const [shortFavoriteListForRender, setShortFavoriteListForRender] = useState([])\r\n  const [checkboxActive, setCheckboxActive] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false)\r\n  const [queryString, setQueryString] = useState('')\r\n\r\n\r\n  // при удалении из изб. и смене чекбокса - обновить\r\n  useEffect(() => {\r\n    localStorage.myFavoriteMoviesList && setMyFavoriteMoviesList(JSON.parse(localStorage.getItem('myFavoriteMoviesList')))\r\n  }, [checkboxActive])\r\n\r\n\r\n  // обработка запроса от формы поиска \r\n  useEffect(() => {\r\n    if (queryString) {\r\n      const newList = myFavoriteMoviesList.filter((movie) =>\r\n        movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n      newList.length ?\r\n        setFavoriteListForRender(newList) : setMessage('Ничего не найдено')\r\n    } else {\r\n      setFavoriteListForRender(myFavoriteMoviesList)\r\n    }\r\n  }, [queryString, checkboxActive, myFavoriteMoviesList])\r\n\r\n\r\n  // обработка чекбокса\r\n  useEffect(() => {\r\n    if (checkboxActive && favoriteListForRender.length) {\r\n      const newShortList = favoriteListForRender.filter(movie => movie.duration <= 40)\r\n      newShortList.length ?\r\n        setShortFavoriteListForRender(newShortList) : setMessage('Ничего не найдено')\r\n    } else {\r\n      setShortFavoriteListForRender([])\r\n    }\r\n  }, [checkboxActive, favoriteListForRender])\r\n\r\n\r\n  const handleSubmitSearchForm = (query) => {\r\n    setMessage('')\r\n    setQueryString(query)\r\n  }\r\n\r\n\r\n  const handleCheckboxChange = (isCheckboxOn) => {\r\n    setMessage('')\r\n    setCheckboxActive(isCheckboxOn)\r\n  }\r\n\r\n\r\n  const closeInfoTooltip = () => {\r\n    setInfoTooltipOpen(false)\r\n    setMessage('')\r\n  }\r\n\r\n\r\n  return (\r\n    <section className='movies-saved'>\r\n\r\n      <Header\r\n        loggedIn={loggedIn}\r\n      />\r\n\r\n      <SearchForm\r\n        handleSubmitSearchForm={handleSubmitSearchForm}\r\n        handleCheckboxChange={handleCheckboxChange}\r\n      />\r\n\r\n      {\r\n        infoTooltipOpen ?\r\n          <InfoTooltip\r\n            closePopup={closeInfoTooltip}\r\n            icon={UnionX}\r\n            notification={message}\r\n          />\r\n          :\r\n          <MoviesCardList\r\n            moviesList={\r\n              shortFavoriteListForRender.length ?\r\n                shortFavoriteListForRender\r\n                :\r\n                favoriteListForRender.length ?\r\n                  favoriteListForRender\r\n                  :\r\n                  myFavoriteMoviesList\r\n            }\r\n            message={message}\r\n          />\r\n      }\r\n\r\n    </section>\r\n  )\r\n})\r\n\r\nexport default SavedMovies\r\n","import {memo, useContext, useEffect, useState} from 'react'\r\nimport './Profile.css'\r\nimport Header from '../Header/Header'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\n\r\nconst Profile = memo(({ loggedIn, handleSubmitUpdateUser, handleLogout }) => {\r\n  const currentUser = useContext(CurrentUser)\r\n  const [buttonDisabled, setButtonDisabled] = useState(true) // при загрузке исправить на true\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [wrongName, setWrongName] = useState(false)\r\n  const [wrongEmail, setWrongEmail] = useState(false) // ошибка результата запроса\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setName(currentUser.name)\r\n      setEmail(currentUser.email)\r\n    }\r\n  }, [currentUser])\r\n\r\n\r\n  useEffect(() => {\r\n    if (name && email) {\r\n      wrongName || wrongEmail || (name === currentUser.name && email === currentUser.email)\r\n        ?\r\n        setButtonDisabled(true)\r\n        :\r\n        setButtonDisabled(false)\r\n    }\r\n  }, [wrongName, wrongEmail, email, name, currentUser])\r\n\r\n  const handleClick = (evt) => {\r\n    evt.preventDefault()\r\n    handleSubmitUpdateUser({ name, email })\r\n  }\r\n\r\n  const handleNameInput = (evt) => {\r\n    setName(evt.target.value)\r\n    evt.target.validationMessage ?\r\n      setWrongName(evt.target.validationMessage)\r\n      :\r\n      setWrongName('')\r\n  }\r\n\r\n  const handleEmailInput = (evt) => {\r\n    setEmail(evt.target.value)\r\n    evt.target.validationMessage ?\r\n      setWrongEmail(evt.target.validationMessage)\r\n      :\r\n      setWrongEmail('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        loggedIn={loggedIn}\r\n      />\r\n      <section className='profile'>\r\n        <h2 className='profile__title'>Hello, {currentUser && currentUser.name}!</h2>\r\n\r\n        <form className='profile__form' onSubmit={handleClick} id='updateUser'>\r\n          <label className='profile__label'>Name\r\n            <input\r\n              id='name'\r\n              name='name'\r\n              type='text'\r\n              className={`profile__input ${wrongName && 'profile__input_wrong'}`}\r\n              value={name}\r\n              onChange={handleNameInput}\r\n              formNoValidate\r\n              minLength='2'\r\n              maxLength='30'\r\n              pattern='^[A-Za-zА-Яа-яЁё\\s\\-]*$'\r\n              title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n            />\r\n          </label>\r\n\r\n          <label className='profile__label'>E-mail\r\n            <input\r\n              id='email'\r\n              name='email'\r\n              type='email'\r\n              className={`profile__input ${wrongEmail && 'profile__input_wrfong'}`}\r\n              value={email}\r\n              onChange={handleEmailInput}\r\n              formNoValidate\r\n              pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n              title=\"поле может содержать только электронный адрес\"\r\n            />\r\n          </label>\r\n\r\n        </form>\r\n        <>\r\n          {\r\n            wrongName &&\r\n            <span className='profile__input-error name-error'>{wrongName}</span>\r\n          }\r\n          {\r\n            wrongEmail &&\r\n            <span className='profile__input-error email-error'>{wrongEmail}</span>\r\n          }\r\n        </>\r\n\r\n        <div className='profile__bottom'>\r\n          <button\r\n            className={`profile__submit ${buttonDisabled && 'profile__submit_disabled'}`}\r\n            form='updateUser'\r\n            disabled={buttonDisabled}\r\n            type='submit'>Edit\r\n          </button>\r\n          <button\r\n            className='profile__submit profile__submit_color'\r\n            onClick={handleLogout}\r\n            type='button'>Sign out\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Profile\r\n","import { memo } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './PageNotFound.css'\r\n\r\nconst PageNotFound = memo(() => {\r\n  const history = useHistory()\r\n\r\n  const handleClick = (evt) => {\r\n    evt.preventDefault()\r\n    history.go(-2)\r\n  }\r\n\r\n  return (\r\n    <div className='not-found__container'>\r\n      <h3 className='not-found__404'>404</h3>\r\n      <p className='not-found__message'>Page not found</p>\r\n      <Link className='not-found__return' to='' onClick={handleClick}>Back</Link>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PageNotFound","class MoviesApi {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`)\r\n    }\r\n\r\n    async getMovies() {\r\n        // console.log('api - getMovies')\r\n        const res = await fetch(`${this._url}`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        });\r\n        return this._checkResponse(res);\r\n    }\r\n}\r\n\r\nconst moviesApi = new MoviesApi // <=  создал экзмепляр\r\n    ({\r\n        url: 'https://api.nomoreparties.co/beatfilm-movies',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n\r\nexport default moviesApi;","export default __webpack_public_path__ + \"static/media/union-v.a9eb6caf.svg\";","import { useState, useEffect } from 'react'\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport './App.css'\r\nimport ProtectedRoute from '../ProtectedRoute'\r\nimport ProtectedRouteAuth from '../ProtectedRouteAuth'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\nimport Register from '../Register/Register'\r\nimport Login from '../Login/Login'\r\nimport Footer from '../Footer/Footer'\r\nimport Main from '../Main/Main'\r\nimport Movies from '../Movies/Movies'\r\nimport SavedMovies from '../MoviesSaved/MoviesSaved'\r\nimport Profile from '../Profile/Profile'\r\nimport PageNotFound from '../PageNotFound/PageNotFound'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport { register, authorize, deleteAuth, getUser, updateUser, getMyMovies } from '../../utils/MainApi'\r\nimport moviesApi from '../../utils/MoviesApi'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionV from '../../images/union-v.svg'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\nfunction App() {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const withFooterURL = ['/', '/movies', '/saved-movies']\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false)\r\n  const [messageErr, setMessageErr] = useState('')\r\n  const [err, setErr] = useState('')\r\n\r\n\r\n  // авторизация при возврате на сайт\r\n  useEffect(() => {\r\n    if (localStorage.isAuth) {\r\n      if (localStorage.currentUser && localStorage.myFavoriteMoviesList && sessionStorage.baseMoviesList) {\r\n        // console.log(' => local data is true...')\r\n        // console.log(JSON.parse(localStorage.getItem('myFavoriteMoviesList')))\r\n        setCurrentUser(JSON.parse(localStorage.getItem('currentUser')))\r\n        history.push(location.pathname) // => при непоср. переходе или обновл. - если ProtectedRoute > /signin и '/' <= location.pathname\r\n      } else {\r\n        console.log(' => getUser...')\r\n        setIsSubmitting(true)\r\n        getUser()\r\n          .then((userData) => {\r\n            setCurrentUser(userData)\r\n            localStorage.setItem('currentUser', JSON.stringify(userData))\r\n            updateMoviesLists()\r\n            history.push(location.pathname) // => при непоср. переходе или обновл. - если ProtectedRoute > /signin <= location.pathname\r\n          })\r\n          .catch(err => {\r\n            setErr(err)\r\n            history.push('/signin')\r\n          })\r\n          .finally(() => setIsSubmitting(false))\r\n      }\r\n    }\r\n  }, [])\r\n\r\n\r\n  // обработка ошибок запросов\r\n  useEffect(() => {\r\n    if (err) {\r\n      setMessageErr(`The server returned an error in response to your request - ${err}`)\r\n      setInfoTooltipOpen(true)\r\n    }\r\n  }, [err])\r\n\r\n\r\n  // авторизация пользователя на /signin\r\n  const handleLoginSubmit = ({ email, password }) => {\r\n    setIsSubmitting(true)\r\n    authorize({ email, password })\r\n      .then((userData) => {\r\n        localStorage.setItem('isAuth', true) // маркер для useEffect\r\n        setCurrentUser(userData)\r\n        localStorage.setItem('currentUser', JSON.stringify(userData))\r\n        updateMoviesLists()\r\n        history.push('/movies')\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  // регистрация пользователя\r\n  const handleRegistrationSubmit = ({ name, email, password }) => {\r\n    setIsSubmitting(true)\r\n    register({ name, email, password })\r\n      .then((userData) => {\r\n        console.log(userData)\r\n        setInfoTooltipOpen(true)\r\n        setTimeout(() => {\r\n          handleLoginSubmit({ email, password }) // => получить куки\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n    // console.log(localStorage)\r\n    // console.log(currentUser)\r\n  }\r\n\r\n\r\n  // выйти из аккаунта\r\n  const handleLogout = () => {\r\n    setIsSubmitting(true)\r\n    deleteAuth()\r\n      .then(() => {\r\n        setCurrentUser()\r\n        localStorage.clear()\r\n        sessionStorage.clear()\r\n        history.push('/')\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  // обновить данные пользователя\r\n  const handleSubmitUpdateUser = ({ name, email }) => {\r\n    setIsSubmitting(true)\r\n    updateUser({ name, email })\r\n      .then(userData => {\r\n        setInfoTooltipOpen(true)\r\n        setCurrentUser(userData)\r\n        localStorage.setItem('currentUser', JSON.stringify(userData))\r\n        setTimeout(() => {\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  const updateMoviesLists = () => {\r\n    // console.log('updateMoviesLists')\r\n    setIsSubmitting(true)\r\n\r\n    getMyMovies()\r\n      .then((myMoviesArray) => {\r\n        localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myMoviesArray))\r\n\r\n        // очищать при окончания сессии веб-страницы: запрос к API при логине и при переходе с др. стр., но не при обновлении и возврте на стр. =>\r\n        if (!sessionStorage.baseMoviesList) { // <= !!! - sessionStorage (=> чаще обновлять baseMoviesList, в т.ч. при работе с разных устройств)\r\n          moviesApi.getMovies()\r\n            .then((mainMoviesArray) => {\r\n              if (myMoviesArray.length) { // если есть фильмы в избранном от API - обнов. осн. список фильмов\r\n                const temporaryList = mainMoviesArray\r\n                myMoviesArray.map((savedMovie) => {\r\n                  const movieIndex = temporaryList.findIndex(existedMovie => existedMovie.id === savedMovie.id) // => index\r\n                  movieIndex > -1 &&\r\n                    temporaryList.splice(movieIndex, 1, savedMovie) // с movieIndex удалить 1 эл-т и заменить его на savedMovie\r\n                  return temporaryList\r\n                })\r\n                sessionStorage.setItem('baseMoviesList', JSON.stringify(temporaryList)) // обновл. массив в sessionStorage <= в /movies отрисовка с уч. избранного\r\n              } else {\r\n                sessionStorage.setItem('baseMoviesList', JSON.stringify(mainMoviesArray)) // полученный без изм. массив в sessionStorage\r\n              }\r\n            })\r\n            .catch((err) => setErr(err))\r\n        }\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  const closePopup = () => {\r\n    setInfoTooltipOpen(false)\r\n    setMessageErr('')\r\n    setErr('')\r\n  }\r\n\r\n\r\n  return (\r\n    <CurrentUser.Provider value={currentUser}>\r\n      <div className='app'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Main />\r\n          </Route>\r\n\r\n          <ProtectedRoute exact path='/movies'\r\n            component={Movies}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/saved-movies'\r\n            component={SavedMovies}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/profile'\r\n            component={Profile}\r\n            handleLogout={handleLogout}\r\n            handleSubmitUpdateUser={handleSubmitUpdateUser}\r\n          />\r\n\r\n          <ProtectedRouteAuth exact path='/signin'\r\n            component={Login}\r\n            handleLoginSubmit={handleLoginSubmit}\r\n            messageErr={messageErr}\r\n          />\r\n\r\n          <ProtectedRouteAuth exact path='/signup'\r\n            component={Register}\r\n            handleRegistrationSubmit={handleRegistrationSubmit}\r\n            messageErr={messageErr}\r\n          />\r\n\r\n          <Route path='*'>\r\n            <PageNotFound />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSubmitting && <Preloader />}\r\n\r\n        {withFooterURL.includes(location.pathname) && <Footer />}\r\n\r\n        {\r\n          infoTooltipOpen &&\r\n          <InfoTooltip\r\n            closePopup={ closePopup }\r\n            icon={ messageErr ? UnionX : UnionV }\r\n            notification={ messageErr ? messageErr : 'Request completed successfully!' }\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </CurrentUser.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}