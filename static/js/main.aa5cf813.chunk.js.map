{"version":3,"sources":["components/ProtectedRoute.js","contexts/CurrentUserContext.js","images/logo.svg","components/Access/Access.js","components/Register/Register.js","components/Login/Login.js","components/Footer/Footer.js","images/icon-menu.svg","components/Navigation/Navigation.js","components/Popup/Popup.js","components/Header/Header.js","components/Promo/Promo.js","components/NavTab/NavTab.js","components/AboutProject/AboutProject.js","components/Techs/Techs.js","images/photo.jpg","images/arrow.svg","components/GridArea/GridArea.js","components/AboutMe/AboutMe.js","components/Main/Main.js","utils/MainApi.js","components/Preloader/Preloader.js","components/InfoTooltip/InfoTooltip.js","images/union-x.svg","components/MoviesCard/MoviesCard.js","components/MoviesCardList/MoviesCardList.js","images/find.svg","components/SearchForm/SearchForm.js","utils/MoviesApi.js","components/Movies/Movies.js","components/MoviesSaved/MoviesSaved.js","components/Profile/Profile.js","components/PageNotFound/PageNotFound.js","images/union-v.svg","components/App/App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","props","loggedIn","component","to","CurrentUser","React","createContext","Access","memo","nextHandleSubmit","greeting","button","isRegistrated","link","messageErr","location","useLocation","useState","wrongName","setWrongName","wrongEmail","setWrongEmail","wrongPassword","setWrongPassword","buttonDisabled","setButtonDisabled","name","setName","email","setEmail","password","setPassword","useEffect","pathname","className","src","logo","alt","onSubmit","evt","preventDefault","id","type","placeholder","value","onChange","target","validationMessage","formNoValidate","minLength","maxLength","pattern","title","form","disabled","Register","handleRegistrationSubmit","Login","handleLoginSubmit","Footer","date","Date","href","rel","getFullYear","Navigation","activeClassName","Popup","closePopup","Content","buttonClose","viewportWidth","handleEsc","key","document","addEventListener","removeEventListener","onClick","currentTarget","Header","history","useHistory","navigationPopup","setNavigationPopup","resolution","window","matchMedia","matches","setViewportWidth","onchange","push","menuImage","Promo","NavTab","smooth","AboutProject","Techs","GridArea","photo","arrow","AboutMe","Main","apiURL","checkResponse","res","ok","json","Promise","reject","status","statusText","register","a","fetch","credentials","method","headers","body","JSON","stringify","authorize","deleteAuth","getUser","updateUser","addToMyMoviesList","movie","country","director","duration","year","description","trailerLink","nameRU","nameEN","image","url","thumbnail","formats","getMyMovies","deleteFromMyMoviesList","_id","Preloader","InfoTooltip","icon","notification","MoviesCard","incomingMovie","currentUser","useContext","setMovie","setDuration","owner","saved","setSaved","mouseOver","setMouseOver","trailerVisible","setTrailerVisible","videoUrlForPopup","setVideoUrlForPopup","setMessageErr","isSubmitting","setIsSubmitting","infoTooltipOpen","setInfoTooltipOpen","hasEmptyField","setHasEmptyField","console","log","dur","Number","h","Math","floor","m","String","indexOf","split","openPopupErr","err","updateMainList","savedMovie","mainMoviesList","parse","localStorage","getItem","updatedMovieIndex","findIndex","existedMovie","splice","setItem","clickDelete","then","deletedMovie","__v","catch","finally","onMouseOver","onMouseLeave","frameBorder","allowFullScreen","UnionX","MoviesCardList","moviesList","message","moviesToRender","setMoviesToRender","buttonVisible","setButtonVisible","numbers","setNumbers","innerWidth","screenWidth","setScreenWidth","handleResize","length","max","slice","map","SearchForm","handleSubmitSearchForm","handleCheckboxChange","isCheckboxOn","setIsCheckboxOn","query","setQuery","inputIsEmpty","setInputIsEmpty","e","style","backgroundImage","find","MoviesApi","this","_url","_headers","_checkResponse","moviesApi","Movies","setMainMoviesList","myFavoriteMoviesList","setMyFavoriteMoviesList","listForRender","setListForRender","shortListForRender","setShortListForRender","queryString","setQueryString","checkboxActive","setCheckboxActive","setMessage","newList","filter","toLowerCase","newShortList","getMovies","moviesFromAPI","updateLocalLists","SavedMovies","favoriteListForRender","setFavoriteListForRender","shortFavoriteListForRender","setShortFavoriteListForRender","moviesArray","Profile","handleSubmitUpdateUser","handleLogout","PageNotFound","goBack","App","setCurrentUser","setLoggedIn","isAuth","userData","Provider","exact","path","removeItem","setTimeout","includes","UnionV","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa5cf813.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n    return (\r\n        <Route>\r\n            {props.loggedIn ? <props.component {...props} /> : <Redirect to='/signin' />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\nexport const CurrentUser = React.createContext();","export default __webpack_public_path__ + \"static/media/logo.c26504b6.svg\";","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport './Access.css'\r\nimport logo from '../../images/logo.svg'\r\n// import { useForm } from '../Validation'\r\n\r\nconst Access = React.memo(({ nextHandleSubmit, greeting, button, isRegistrated, link, messageErr }) => {\r\n\r\n    const location = useLocation()\r\n    // const form = useForm()\r\n    const [wrongName, setWrongName] = React.useState('')\r\n    const [wrongEmail, setWrongEmail] = React.useState('')\r\n    const [wrongPassword, setWrongPassword] = React.useState('')\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(true)\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    //   const [errors, setErrors] = React.useState({})\r\n    //   const [values, setValues] = React.useState({});\r\n    //   const [isValid, setIsValid] = React.useState(false);\r\n\r\n    //   const handleChange = (evt) => {\r\n    //     const target = evt.target;\r\n    //     const name = target.name;\r\n    //     const value = target.value;\r\n    //     setValues({...values, [name]: value});\r\n    //     //validationMessage возвр. span c сообщ. об ошибке проверки для текущего поля формы\r\n    //     setErrors({...errors, [name]: target.validationMessage });\r\n    //     // checkValidity возвр. true, если значение элемента проходит валидацию, иначе - false\r\n    //     setIsValid(target.closest(\"form\").checkValidity());\r\n    //   }\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (location.pathname === '/signin') {\r\n            !email || !password\r\n                ?\r\n                setButtonDisabled(true)\r\n                :\r\n                wrongEmail || wrongPassword\r\n                    ?\r\n                    setButtonDisabled(true)\r\n                    :\r\n                    setButtonDisabled(false)\r\n        } else {\r\n            !name || !email || !password\r\n                ?\r\n                setButtonDisabled(true)\r\n                :\r\n                wrongName || wrongEmail || wrongPassword\r\n                    ?\r\n                    setButtonDisabled(true)\r\n                    :\r\n                    setButtonDisabled(false)\r\n        }\r\n    }, [wrongName, wrongEmail, wrongPassword, location.pathname, email, password, name])\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        nextHandleSubmit({ name, email, password })\r\n    }\r\n\r\n\r\n    const handleNameInput = (evt) => {\r\n        setName(evt.target.value)\r\n        // handleChange(evt)\r\n        evt.target.validationMessage ?\r\n            setWrongName(evt.target.validationMessage)\r\n            :\r\n            setWrongName('')\r\n    }\r\n\r\n\r\n    const handleEmailInput = (evt) => {\r\n        setEmail(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongEmail(evt.target.validationMessage)\r\n            :\r\n            setWrongEmail('')\r\n    }\r\n\r\n\r\n    const handlePasswordInput = (evt) => {\r\n        setPassword(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongPassword(evt.target.validationMessage)\r\n            :\r\n            setWrongPassword('')\r\n    }\r\n\r\n\r\n\r\n    // console.log(form.values)\r\n\r\n\r\n\r\n    return (\r\n        <div className='access'>\r\n\r\n            <div className='access__top'>\r\n                <img className='logo' src={logo} alt='логотип' />\r\n                <h2 className='access__title'>{greeting}</h2>\r\n            </div>\r\n\r\n            <form className='access__form' onSubmit={handleSubmit} id='access'>\r\n                {location.pathname === '/signup' &&\r\n                    <>\r\n                        <label className='access__label'>Имя\r\n                            <input\r\n                                id='name'\r\n                                name='name'\r\n                                type='text'\r\n                                placeholder='name'\r\n                                className={`access__input ${wrongName && 'access__input_wrong'}`}\r\n                                value={name}\r\n                                onChange={handleNameInput}\r\n                                formNoValidate\r\n                                minLength='2'\r\n                                maxLength='30'\r\n                                pattern='^[A-Za-zА-Яа-яЁё\\s\\-]*$'\r\n                                title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n                            />\r\n                        </label>\r\n                        {\r\n                            wrongName &&\r\n                            <span className='access__input-error name-error'>{wrongName}</span>\r\n                        }\r\n                    </>\r\n                }\r\n\r\n                <label className='access__label'>E-mail\r\n                    <input\r\n                        id='email'\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='e-mail'\r\n                        className={`access__input ${wrongEmail && 'access__input_wrong'}`}\r\n                        value={email}\r\n                        onChange={handleEmailInput}\r\n                        formNoValidate\r\n                        pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n                        title=\"поле должно содержать формат электронного адреса\"\r\n                    />\r\n                </label>\r\n                {\r\n                    wrongEmail &&\r\n                    <span className='access__input-error email-error'>{wrongEmail}</span>\r\n                }\r\n\r\n                <label className='access__label'>Пароль\r\n                    <input\r\n                        id='password'\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='password'\r\n                        className={`access__input ${wrongPassword && 'access__input_wrong'}`}\r\n                        value={password}\r\n                        onChange={handlePasswordInput}\r\n                        formNoValidate\r\n                        minLength='6'\r\n                        maxLength='30'\r\n                    />\r\n                </label>\r\n                {\r\n                    wrongPassword &&\r\n                    <span className='access__input-error password-error'>{wrongPassword}</span>\r\n                }\r\n            </form>\r\n\r\n            <div className='access__bottom'>\r\n                {messageErr &&\r\n                    <p className=\"access__message\">{messageErr}</p>}\r\n\r\n                <button\r\n                    className={`access__submit ${buttonDisabled && 'access__submit_disabled'}`}\r\n                    form='access'\r\n                    disabled={buttonDisabled}\r\n                    type='submit'\r\n                >\r\n                    {button}\r\n                </button>\r\n\r\n                <p className='access__is-registrated'>{isRegistrated}\r\n                    <Link\r\n                        to={location.pathname === '/signin' ? '/signup' : '/signin'}\r\n                        className='access__link'\r\n                        target='_self'\r\n                    >\r\n                        {link}\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Access","import React from 'react'\r\nimport Access from '../Access/Access'\r\n\r\nconst Register = React.memo(({ handleRegistrationSubmit, messageErr }) => {\r\n\r\n    const greeting = 'Добро пожаловать!'\r\n    const button = 'Зарегистрироваться'\r\n    const isRegistrated = 'Уже зарегистрированы?'\r\n    const link = 'Войти'\r\n\r\n    return (\r\n        <Access\r\n            nextHandleSubmit={handleRegistrationSubmit}\r\n            greeting={greeting}\r\n            button={button}\r\n            isRegistrated={isRegistrated}\r\n            link={link}\r\n            messageErr={messageErr}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Register","import React from 'react'\r\nimport Access from '../Access/Access'\r\n\r\nconst Login = React.memo(({ handleLoginSubmit, messageErr }) => {\r\n\r\n    const greeting = 'Рады видеть!'\r\n    const button = 'Войти'\r\n    const isRegistrated = 'Ещё не зарегистрированы?'\r\n    const link = 'Регистрация'\r\n\r\n    return (\r\n        <Access\r\n            nextHandleSubmit={handleLoginSubmit}\r\n            greeting={greeting}\r\n            button={button}\r\n            isRegistrated={isRegistrated}\r\n            link={link}\r\n            messageErr={messageErr}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Login","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = React.memo(() => {\r\n\r\n    const date = new Date()\r\n\r\n    return (\r\n        <footer className='footer'>\r\n            <h4 className='footer__information'>Учебный проект Яндекс.Практикум х BeatFilm.</h4>\r\n            <ul className='footer__links-list'>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://practicum.yandex.ru' target='_blank' rel='noreferrer'>Яндекс.Практикум</a>\r\n                </li>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://github.com' target='_blank' rel='noreferrer'>Github</a>\r\n                </li>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://www.facebook.com' target='_blank' rel='noreferrer'>Facebook</a>\r\n                </li>\r\n            </ul>\r\n            <p className='footer__copyright'>&copy; {date.getFullYear()}</p>\r\n        </footer>\r\n    )\r\n})\r\n\r\nexport default Footer","export default __webpack_public_path__ + \"static/media/icon-menu.4b1de763.svg\";","import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nconst Navigation = React.memo(() => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div className='navigation'>\r\n\r\n            <nav className='navigation__container'>\r\n                <NavLink to='/' className={`navigation__link navigation__link_main  ${location.pathname === '/' && 'navigation__link_active'}`} target='_self'>\r\n                    Главная\r\n                </NavLink>\r\n                <NavLink to='/movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n                    Фильмы\r\n                </NavLink>\r\n                <NavLink to='/saved-movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n                    Сохранённые фильмы\r\n                </NavLink>\r\n            </nav>\r\n\r\n            <div className='navigation__account-container'>\r\n                <NavLink to='/profile' className='navigation__account-link' activeClassName='navigation__link_active' target='_self'>\r\n                    Аккаунт\r\n                </NavLink>\r\n                <div className='navigation__account-image'></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navigation\r\n\r\n","import React from 'react'\r\n\r\nimport './Popup.css'\r\n\r\nconst Popup = (({ closePopup, Content, buttonClose, viewportWidth }) => {\r\n\r\n    const handleFieldClick = (evt) => {\r\n        evt.target === evt.currentTarget && closePopup()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const handleEsc = (evt) => {\r\n            evt.key === 'Escape' && closePopup()\r\n        }\r\n\r\n        viewportWidth && closePopup()\r\n\r\n        document.addEventListener('keyup', handleEsc)\r\n\r\n        return () => {\r\n            document.removeEventListener('keyup', handleEsc)\r\n        }\r\n\r\n    }, [closePopup, viewportWidth])\r\n\r\n\r\n    return (\r\n        <div className='popup' onClick={handleFieldClick}>\r\n                {\r\n                    buttonClose &&\r\n                    <button className='popup__close' type='button' onClick={closePopup}></button>\r\n                }\r\n                {Content}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Popup","import React from 'react'\r\nimport { useLocation, useHistory, Link } from 'react-router-dom'\r\nimport './Header.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menuImage from '../../images/icon-menu.svg'\r\nimport Navigation from '../Navigation/Navigation'\r\nimport Popup from '../Popup/Popup'\r\n\r\nconst Header = React.memo(({loggedIn}) => {\r\n\r\n    const location = useLocation() // или > { pathname } = useLocation()\r\n    const history = useHistory()\r\n\r\n    const [navigationPopup, setNavigationPopup] = React.useState(false)\r\n    const resolution = window.matchMedia('(min-width: 800px)') // медиа-запрос в конст., возвр. объект\r\n    const [viewportWidth, setViewportWidth] = React.useState(resolution.matches) // св-во объекта ответа - true - если document сейчас соот-т медиа-запросу\r\n\r\n    React.useEffect(() => {\r\n        resolution.onchange = () => { // переход через 780рх\r\n            resolution.matches ? // => true / false\r\n                setViewportWidth(true)\r\n                :\r\n                setViewportWidth(false)\r\n        }\r\n        return resolution.onchange\r\n    }, [resolution])\r\n\r\n    const openPopup = () => {\r\n        setNavigationPopup(true)\r\n    }\r\n\r\n    const closePopup = () => {\r\n        setNavigationPopup(false)\r\n    }\r\n\r\n    return (\r\n        <header className={`header ${location.pathname === '/' && 'header__type_color'}`}>\r\n            <div className='header__wrap'>\r\n                <img className='header__logo' src={logo} onClick={() => history.push('/')} alt='логотип' />\r\n                {\r\n                    !loggedIn ?\r\n                        <nav className='header__nav-container'>\r\n                            <Link to='/signup' className='header__link_word' target='_self'>Регистрация</Link>\r\n                            <Link to='/signin' className='header__link_button' target='_self'>Войти</Link>\r\n                        </nav>\r\n                        :\r\n                        <>\r\n                            {viewportWidth ?\r\n                                <Navigation />\r\n                                :\r\n                                <img className='header__nav-icon' src={menuImage} alt='иконка меню' onClick={openPopup} />\r\n                            }\r\n                        </>\r\n                }\r\n                {\r\n                    navigationPopup &&\r\n                    <Popup\r\n                        closePopup={closePopup}\r\n                        Content={<Navigation />}\r\n                        buttonClose={true}\r\n                        viewportWidth={viewportWidth}\r\n                    />\r\n                }\r\n            </div>\r\n        </header >\r\n    )\r\n})\r\n\r\nexport default Header","import React from 'react'\r\nimport './Promo.css'\r\n\r\nconst Promo = React.memo(() => {\r\n    return (\r\n        <section className='promo'>\r\n            <h1 className='promo__titile'>\r\n                Учебный проект студента факультета Веб-разработки.\r\n            </h1>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Promo","import React from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport './NavTab.css';\r\n\r\nconst NavTab = React.memo(() => {\r\n    return (\r\n        <nav className='nav-tab'>\r\n\r\n            <HashLink smooth to='/#about-project' className='nav-tab__link'>\r\n                О проекте\r\n            </HashLink>\r\n\r\n            <HashLink smooth to='/#techs' className='nav-tab__link'>\r\n                Технологии\r\n            </HashLink>\r\n\r\n            <HashLink smooth to='/#about-me' className='nav-tab__link'>\r\n                Студент\r\n            </HashLink>\r\n\r\n        </nav>\r\n    )\r\n});\r\n\r\nexport default NavTab;","import React from 'react'\r\nimport './AboutProject.css'\r\n\r\nconst AboutProject = React.memo(() => {\r\n    return (\r\n\r\n        <section className='project' id='about-project'>\r\n\r\n            <h2 className='project__title'>О проекте</h2>\r\n\r\n            <ul className='project__about-list'>\r\n                <li className='project__about-list-item'>\r\n                    <h3 className='project__about-list-title'>\r\n                        Дипломный проект включал 5 этапов\r\n                    </h3>\r\n                    <p className='project__about-list-text'>\r\n                        Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.\r\n                    </p>\r\n                </li>\r\n                <li className='project__about-list-item'>\r\n                    <h3 className='project__about-list-title'>\r\n                        На выполнение диплома ушло 5 недель\r\n                    </h3>\r\n                    <p className='project__about-list-text'>\r\n                        У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className='project__terms-list'>\r\n                <li className='project__terms-list-item'>\r\n                    <div className='project__terms-list-term project__terms-list-term_color'>1 неделя</div>\r\n                    <p className='project__terms-list-description'>Back-end</p>\r\n                </li>\r\n                <li className='project__terms-list-item'>\r\n                    <div className='project__terms-list-term'>4 недели</div>\r\n                    <p className='project__terms-list-description'>Front-end</p>\r\n                </li>\r\n            </ul>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default AboutProject","import React from 'react'\r\nimport './Techs.css'\r\n\r\nconst Techs = () => {\r\n    return (\r\n        <section className='techs' id='techs'>\r\n            <div className='techs__wrap'>\r\n            <h2 className='techs__title'>Технологии</h2>\r\n            <h3 className='techs__subtitle'>7 технологий</h3>\r\n            <p className='techs__text'>\r\n                На курсе веб-разработки мы освоили технологии, которые применили в дипломном проекте.\r\n            </p>\r\n            < div className='techs__container'>\r\n                <div className='techs__tech-icon'>HTML</div>\r\n                <div className='techs__tech-icon'>CSS</div>\r\n                <div className='techs__tech-icon'>JS</div>\r\n                <div className='techs__tech-icon'>React</div>\r\n                <div className='techs__tech-icon'>Git</div>\r\n                <div className='techs__tech-icon'>Express.js</div>\r\n                <div className='techs__tech-icon'>mongoDB</div>\r\n            </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Techs","export default __webpack_public_path__ + \"static/media/photo.b2691a65.jpg\";","export default __webpack_public_path__ + \"static/media/arrow.ceb3ba2e.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './GridArea.css'\r\nimport photo from '../../images/photo.jpg'\r\nimport arrow from '../../images/arrow.svg'\r\n\r\n\r\nconst GridArea = React.memo(() => {\r\n\r\n    return (\r\n        <article className='grid-area'>\r\n\r\n            <img className='grid-area__photo' src={photo} alt='Фото пользователя' />\r\n\r\n            <div className='grid-area__info'>\r\n                <h3 className='grid-area__info-name'>Юрий</h3>\r\n                <h4 className='grid-area__info-about'>Фронтенд-разработчик, 43 года</h4>\r\n                <p className='grid-area__info-text'>\r\n                    Я живу в Москве, у меня высшее юридическое образование, но основной отрезок\r\n                    профессиональной карьеры пришёлся на строительную сферу. У меня есть жена и четыре прекрасных ребёнка.\r\n                    Мне нравится смотреть хорошее кино и путешествовать с семьёй. Недавно я открыл для себя ещё одно увлечение - кодить.\r\n                    И после того, как прошёл курс по веб-разработке, решил полностью посвятить себя любимому делу.\r\n                </p>\r\n                <ul className='grid-area__info-links-list'>\r\n                    <li className='grid-area__links-item'>\r\n                        <Link to={{ pathname: 'https://www.facebook.com' }} className='grid-area__info-link' target='_blank'>Facebook</Link>\r\n                    </li>\r\n                    <li className='grid-area__links-item'>\r\n                        <Link to={{ pathname: 'https://github.com/yuryavdeev' }} className='grid-area__info-link' target='_blank'>Github</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className='grid-area__portfolio'>\r\n                <h3 className='grid-area__portfolio-title'>Портфолио</h3>\r\n                <ul className='grid-area__portfolio-links-list'>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Статичный сайт</p>\r\n                        <Link to={{ pathname: 'https://github.com/yuryavdeev/how-to-learn' }} className='grid-area__portfolio-link' target='_blank'>\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                    <hr className='grid-area__portfolio-border'></hr>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Адаптивный сайт</p>\r\n                        <Link to={{ pathname: 'https://yuryavdeev.github.io/russian-travel/index.html' }} className='grid-area__portfolio-link' target='_blank'>\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                    <hr className='grid-area__portfolio-border'></hr>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Одностраничное приложение</p>\r\n                        <Link to={{ pathname: 'https://yuryavdeev.github.io/mesto-react/' }} className='grid-area__portfolio-link' target='_blank'>\r\n\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </article >\r\n    )\r\n})\r\n\r\nexport default GridArea","import React from 'react'\r\nimport './AboutMe.css'\r\nimport GridArea from '../GridArea/GridArea'\r\n\r\n\r\nconst AboutMe = React.memo(() => {\r\n\r\n\r\n    return (\r\n        <section className='about-me' id='about-me'>\r\n            <h2 className='about-me__title'>Студент</h2>\r\n            <GridArea />         \r\n        </section >\r\n    )\r\n})\r\n\r\nexport default AboutMe","import React from 'react'\r\n\r\nimport './Main.css'\r\nimport Header from '../Header/Header'\r\nimport Promo from '../Promo/Promo'\r\nimport NavTab from '../NavTab/NavTab'\r\nimport AboutProject from '../AboutProject/AboutProject'\r\nimport Techs from '../Techs/Techs'\r\nimport AboutMe from '../AboutMe/AboutMe'\r\n\r\nconst Main = React.memo(({ loggedIn }) => {\r\n    return (\r\n        <section className='main'>\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n            <Promo />\r\n            <NavTab />\r\n            <AboutProject />\r\n            <Techs />\r\n            <AboutMe />\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Main","const apiURL = 'https://api.avdeev.movies.nomoredomains.monster';\r\n// const apiURL = 'http://localhost:3000';\r\n\r\nconst checkResponse = (res) => {\r\n    return res.ok ?\r\n        res.json()\r\n        :\r\n        Promise.reject(`код ${res.status}: ${res.statusText}`);\r\n}\r\n\r\nexport const register = async ({ name, email, password }) => {\r\n    const res = await fetch(`${apiURL}/signup`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const authorize = async ({ email, password }) => {\r\n    const res = await fetch(`${apiURL}/signin`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const deleteAuth = async () => {\r\n    const res = await fetch(`${apiURL}/signout`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\n\r\nexport const getUser = async () => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const updateUser = async ({ name, email }) => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const addToMyMoviesList = async (movie) => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            trailerLink: movie.trailerLink,\r\n            id: movie.id,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n            image: movie.image.url ?\r\n                `https://api.nomoreparties.co${movie.image.url}`\r\n                :\r\n                movie.image,\r\n            thumbnail: movie.thumbnail ?\r\n                movie.thumbnail\r\n                :\r\n                `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const getMyMovies = async () => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const deleteFromMyMoviesList = async (_id) => {\r\n    const res = await fetch(`${apiURL}/movies/${_id}`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className='preloader'>\r\n            <div className='preloader__container'>\r\n                <span className='preloader__round'></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\nimport Popup from '../Popup/Popup'\r\nimport './InfoTooltip.css'\r\n\r\nfunction InfoTooltip({ closePopup, icon, notification }) {\r\n\r\n    return (\r\n        <Popup\r\n            closePopup={closePopup}\r\n            Content={\r\n                <div className='info-tooltip__container'>\r\n                    <img className='info-tooltip__image' src={icon} alt={notification} />\r\n                    <p className='info-tooltip__notification'>{notification}</p>\r\n                </div>\r\n            }\r\n            buttonClose={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","export default __webpack_public_path__ + \"static/media/union-x.d4ce2a26.svg\";","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCard.css'\r\nimport Popup from '../Popup/Popup'\r\nimport { addToMyMoviesList, deleteFromMyMoviesList } from '../../utils/MainApi'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\nconst MoviesCard = React.memo(({ incomingMovie }) => {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n    const location = useLocation()\r\n    const [movie, setMovie] = React.useState(incomingMovie)\r\n    const [duration, setDuration] = React.useState('')\r\n    const [saved, setSaved] = React.useState(movie.owner === currentUser._id)\r\n    const [mouseOver, setMouseOver] = React.useState(false)\r\n    const [trailerVisible, setTrailerVisible] = React.useState(false)\r\n    const [videoUrlForPopup, setVideoUrlForPopup] = React.useState('')\r\n    const [messageErr, setMessageErr] = React.useState('')\r\n    const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n    const [hasEmptyField, setHasEmptyField] = React.useState('')\r\n\r\n\r\n    React.useEffect(() => {\r\n        for (const key in movie) {\r\n            if (movie[key] === '' || movie[key] === null) {\r\n                console.log(`Пустое поле ${key} у фильма - ${movie.nameRU}`)\r\n                setHasEmptyField(key)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    React.useEffect(() => {\r\n        const dur = Number(movie.duration)\r\n        const h = Math.floor(dur / 60)\r\n        const m = Math.floor(dur % 60)\r\n        setDuration(`${h}ч ${m}м`)\r\n    }, [movie.duration])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (hasEmptyField === 'trailerLink' || String(movie.trailerLink).indexOf('http') < 0) {\r\n            setHasEmptyField('trailerLink')\r\n            setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n        } else {\r\n            String(movie.trailerLink).indexOf('v=') > -1 &&\r\n                setVideoUrlForPopup(String(movie.trailerLink).split('v=')[1])\r\n        }\r\n    }, [hasEmptyField, movie.trailerLink])\r\n\r\n\r\n    const openPopupErr = (err) => {\r\n        setMessageErr(`В ответе на Ваш запрос сервером возвращена ошибка - ${err}`)\r\n        setInfoTooltipOpen(true)\r\n    }\r\n\r\n\r\n    const showTrailer = () => {\r\n        // console.log(movie)\r\n        !messageErr ? setTrailerVisible(true) : setInfoTooltipOpen(true)\r\n    }\r\n\r\n\r\n    const closePopup = () => {\r\n        setTrailerVisible(false)\r\n        setInfoTooltipOpen(false)\r\n    }\r\n\r\n\r\n    // при удалении или добавл. фильма в избранное\r\n    const updateMainList = (savedMovie) => {\r\n        const mainMoviesList = JSON.parse(localStorage.getItem('moviesList'))\r\n        const updatedMovieIndex = mainMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id)\r\n        // начиная с updatedMovieIndex удалить 1 элемент и заменить его в mainMoviesList:\r\n        mainMoviesList.splice(updatedMovieIndex, 1, savedMovie)\r\n        // обновил список фильмов в localStorage\r\n        localStorage.setItem('moviesList', JSON.stringify(mainMoviesList)) // если запрос - каждый раз от АПИ - удалить!!!!!!!!!!!\r\n        localStorage.setItem('myFavoriteMoviesList', JSON.stringify((mainMoviesList)))\r\n    }\r\n\r\n\r\n    const clickSaved = () => {\r\n        if (hasEmptyField) {\r\n            setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n            setInfoTooltipOpen(true)\r\n        } else {\r\n            setIsSubmitting(true)\r\n            addToMyMoviesList(movie)\r\n                .then((savedMovie) => {\r\n                    setSaved(true)\r\n                    setMovie(savedMovie)\r\n                    updateMainList(savedMovie)\r\n                })\r\n                .catch((err) => openPopupErr(err))\r\n                .finally(() => setIsSubmitting(false))\r\n        }\r\n    }\r\n\r\n\r\n    const clickDelete = () => {\r\n        setIsSubmitting(true)\r\n        deleteFromMyMoviesList(movie._id)\r\n            .then((deletedMovie) => {\r\n                const { owner, _id, __v, ...savedMovie } = deletedMovie // создал объект фильма savedMovie без __v, owner и _id\r\n                updateMainList(savedMovie)\r\n                setSaved(false)\r\n                location.pathname === '/saved-movies' ?\r\n                    setMovie('')\r\n                    :\r\n                    setMovie(savedMovie)\r\n            })\r\n            .catch((err) => openPopupErr(err))\r\n            .finally(() => setIsSubmitting(false))\r\n    }\r\n\r\n\r\n    return (\r\n        movie &&\r\n        <section className='movie'>\r\n\r\n            {\r\n                (videoUrlForPopup || messageErr) ?\r\n                    <img\r\n                        className='movie__image'\r\n                        onClick={() => showTrailer()}\r\n                        onMouseOver={() => setMouseOver(true)}\r\n                        onMouseLeave={() => setMouseOver(false)}\r\n                        // при обратном сохранении api вернул movie.image без url\r\n                        src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n                        alt='карточка фильма'\r\n                    />\r\n                    :\r\n                    <a className='movie__trailer-link' href={movie.trailerLink} target='_blank' rel='noreferrer'>\r\n                        <img\r\n                            className='movie__image'\r\n                            onMouseOver={() => setMouseOver(true)}\r\n                            onMouseLeave={() => setMouseOver(false)}\r\n                            src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n                            alt='карточка фильма'\r\n                        />\r\n                    </a>\r\n            }\r\n\r\n            <div className='movie__bottom-container'>\r\n                <h3 className='movie__caption'>{movie.nameRU}</h3>\r\n                <p className='movie__duration'>{duration}</p>\r\n            </div>\r\n\r\n            {\r\n                location.pathname === '/saved-movies' ?\r\n                    <button\r\n                        className={`movie__favorites movie__favorites_delete ${mouseOver && 'movie__favorites_delete-active'}`}\r\n                        onMouseOver={() => setMouseOver(true)}\r\n                        onMouseLeave={() => setMouseOver(false)}\r\n                        onClick={clickDelete}\r\n                        aria-label='удаление из избранного'\r\n                    >\r\n                    </button>\r\n                    :\r\n                    saved ?\r\n                        <button\r\n                            className='movie__favorites movie__favorites_true'\r\n                            onClick={clickDelete}\r\n                            aria-label='удаление из избранного'\r\n                        >\r\n                        </button>\r\n                        :\r\n                        <button\r\n                            className=\r\n                            {`movie__favorites movie__favorites_false ${mouseOver && 'movie__favorites_false-active'} ${saved && 'movie__favorites_hidden'}`}\r\n                            onMouseOver={() => setMouseOver(true)}\r\n                            onClick={clickSaved}\r\n                            aria-label='добавить в избранное'\r\n                        >\r\n                            Сохранить\r\n                        </button>\r\n            }\r\n\r\n            {\r\n                trailerVisible &&\r\n                <Popup\r\n                    closePopup={closePopup}\r\n                    buttonClose={true}\r\n                    Content={\r\n                        <div className='movie__trailer-container'>\r\n                            <iframe\r\n                                className='movie__trailer'\r\n                                title='trailer-video'\r\n                                type='text/html'\r\n                                src={`https://www.youtube.com/embed/${videoUrlForPopup}`}\r\n                                frameBorder='0'\r\n                                allowFullScreen>\r\n                            </iframe>\r\n                        </div>\r\n                    }\r\n                />\r\n            }\r\n\r\n            {isSubmitting && <Preloader />}\r\n\r\n            {\r\n                infoTooltipOpen &&\r\n                <InfoTooltip\r\n                    closePopup={closePopup}\r\n                    icon={UnionX}\r\n                    notification={messageErr}\r\n                />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default MoviesCard","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCardList.css'\r\nimport MoviesCard from '../MoviesCard/MoviesCard'\r\n\r\nconst MoviesCardList = React.memo(({ moviesList, message }) => {\r\n\r\n    const location = useLocation()\r\n    const [moviesToRender, setMoviesToRender] = React.useState([])\r\n    const [buttonVisible, setButtonVisible] = React.useState(true)\r\n    const [numbers, setNumbers] = React.useState(0)\r\n    const [screenWidth, setScreenWidth] = React.useState(window.innerWidth)\r\n\r\n\r\n    React.useEffect(() => {\r\n        const handleResize = () => {\r\n            setScreenWidth(window.innerWidth)\r\n        }\r\n\r\n        location.pathname === '/movies' &&\r\n            window.addEventListener('resize', handleResize)\r\n\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [location.pathname])\r\n\r\n\r\n    React.useEffect(() => {\r\n        setButtonVisible(true)\r\n\r\n        location.pathname === '/saved-movies'\r\n            ?\r\n            setNumbers(moviesList.length)\r\n            :\r\n            setNumbers(\r\n                (screenWidth >= 1137) ?\r\n                    3\r\n                    :\r\n                    (screenWidth < 768) ?\r\n                        1\r\n                        :\r\n                        2\r\n            )\r\n    }, [moviesList])\r\n\r\n    // numbers на первой загрузке и увеличении ширины экрана (! - слушатель) => отрисовать мин (3, 2, 1) или макс (своё значение)\r\n    React.useEffect(() => {\r\n        location.pathname === '/movies'\r\n            &&\r\n            setNumbers(\r\n                screenWidth >= 1137 ?\r\n                    Math.max(3, numbers)\r\n                    :\r\n                    screenWidth < 768 ?\r\n                        numbers\r\n                        :\r\n                        Math.max(2, numbers)\r\n            )\r\n    }, [screenWidth])\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        setMoviesToRender(\r\n            moviesList.slice(0, numbers).map(movie =>\r\n                <MoviesCard\r\n                    key={movie.id}\r\n                    incomingMovie={movie}\r\n                />\r\n            )\r\n        )\r\n        moviesList.length <= numbers && setButtonVisible(false)\r\n\r\n    }, [moviesList, numbers])\r\n\r\n\r\n    const addMoviesToScreen = () => {\r\n        setNumbers(\r\n            screenWidth >= 1137 ?\r\n                numbers + 3\r\n                // : screenWidth < 768 ?\r\n                //     numbers + 1\r\n                :\r\n                numbers + 2\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='movies-card-list'>\r\n            {\r\n                message ?\r\n                    <p className=\"movies-card-list__message\">{message}</p>\r\n                    :\r\n                    <div className='movies-card-list__grid'>\r\n                        {moviesToRender}\r\n                    </div>\r\n            }\r\n            {\r\n                buttonVisible &&\r\n                !message &&\r\n                <button className='movies-card-list__button' onClick={addMoviesToScreen}>Ещё</button>\r\n            }\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default MoviesCardList","export default __webpack_public_path__ + \"static/media/find.0fcf493f.svg\";","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './SearchForm.css'\r\nimport find from '../../images/find.svg'\r\n\r\nconst SearchForm = React.memo(({ handleSubmitSearchForm, handleCheckboxChange }) => {\r\n\r\n    const location = useLocation()\r\n    const [isCheckboxOn, setIsCheckboxOn] = React.useState(false)\r\n    const [query, setQuery] = React.useState('')\r\n    const [inputIsEmpty, setInputIsEmpty] = React.useState(false)\r\n\r\n    const handleInput = (e) => {\r\n        setQuery(e.target.value)\r\n        setInputIsEmpty(false)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        handleCheckboxChange(isCheckboxOn)\r\n    }, [isCheckboxOn])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        !query && location.pathname !== '/saved-movies'\r\n            ?\r\n            setInputIsEmpty(true)\r\n            :\r\n            handleSubmitSearchForm(query)\r\n    }\r\n\r\n    return (\r\n        <section className='search-container'>\r\n\r\n            <form className='search__form' onSubmit={handleSubmit}>\r\n                <label className='search__label-input'>\r\n                    <input\r\n                        className='search__input'\r\n                        placeholder='Фильмы'\r\n                        onChange={handleInput}\r\n                        value={query}\r\n                        type='text'\r\n                    />\r\n                </label>\r\n                {\r\n                    inputIsEmpty &&\r\n                    <span className='search__input-error'>Нужно ввести ключевое слово</span>\r\n                }\r\n                <button\r\n                    className='search__button'\r\n                    type='submit'\r\n                    style={{ backgroundImage: `url(${find})` }}\r\n                >\r\n                </button>\r\n                <hr className='search__border-line' />\r\n                <label className='search__label-checkbox'>Короткометражки\r\n                    <input\r\n                        className='search__checkbox'\r\n                        type='checkbox'\r\n                        onChange={() => setIsCheckboxOn(!isCheckboxOn)}\r\n                    />\r\n                    <span className='search__checkbox-visible'></span>\r\n                </label>\r\n            </form>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default SearchForm","class MoviesApi {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`)\r\n    }\r\n\r\n    async getMovies() {\r\n        console.log('api - getMovies')\r\n        const res = await fetch(`${this._url}`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        });\r\n        return this._checkResponse(res);\r\n    }\r\n\r\n    // const res = await fetch(`.../movies`, {\r\n    //     credentials: 'include',\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //         query: queryString,\r\n    //     })\r\n    // })\r\n    // return checkResponse(res)\r\n}\r\n\r\nconst moviesApi = new MoviesApi // <=  создал экзмепляр\r\n    ({\r\n        url: 'https://api.nomoreparties.co/beatfilm-movies',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n\r\nexport default moviesApi;","import React from 'react'\r\n\r\nimport './Movies.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport moviesApi from '../../utils/MoviesApi';\r\nimport Preloader from '../Preloader/Preloader'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst Movies = React.memo(({ loggedIn }) => {\r\n\r\n    const [mainMoviesList, setMainMoviesList] = React.useState([]) // из апи\r\n    const [myFavoriteMoviesList, setMyFavoriteMoviesList] = React.useState([])\r\n    const [listForRender, setListForRender] = React.useState([])\r\n    const [shortListForRender, setShortListForRender] = React.useState([])\r\n    const [queryString, setQueryString] = React.useState('')\r\n    const [checkboxActive, setCheckboxActive] = React.useState(false)\r\n    const [message, setMessage] = React.useState('')\r\n    const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n\r\n\r\n    // изм списка всех фильмов\r\n    React.useEffect(() => {\r\n        localStorage.moviesList &&  // убрать - если делать запрос к API при каждом поиске (setInitialMoviesList обновляется в updateLocalLists())\r\n            setMainMoviesList(JSON.parse(localStorage.getItem('moviesList')))\r\n        localStorage.myFavoriteMoviesList &&\r\n            setMyFavoriteMoviesList(JSON.parse(localStorage.getItem('myFavoriteMoviesList')))\r\n    }, [checkboxActive]) // при удалении и сохр. фильмов и смене чекбокса - обновить осн. список\r\n\r\n\r\n    // обработка запроса от формы поиска \r\n    React.useEffect(() => {\r\n        if (queryString) {\r\n            const newList = mainMoviesList.filter((movie) =>\r\n                movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n            newList.length ? setListForRender(newList) : setMessage('Ничего не найдено')\r\n        }\r\n    }, [queryString, checkboxActive])\r\n\r\n\r\n    // обработка чекбокса - после поиска\r\n    React.useEffect(() => {\r\n        if (checkboxActive && listForRender.length) {\r\n            const newShortList = listForRender.filter(movie => movie.duration <= 40)\r\n            newShortList.length ? setShortListForRender(newShortList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setShortListForRender([])\r\n        }\r\n    }, [listForRender])\r\n\r\n\r\n    // объединяем два списка - внешний от movies API и внутренний от myFavoriteMoviesList\r\n    const updateLocalLists = (moviesFromAPI, query) => {\r\n        myFavoriteMoviesList.map((savedMovie) => {\r\n            const updatedMovieIndex = moviesFromAPI.findIndex(existedMovie => existedMovie.id === savedMovie.id) // => index\r\n            updatedMovieIndex > -1 &&\r\n                // начиная с updatedMovieIndex удалить 1 элемент и заменить его на savedMovie\r\n                moviesFromAPI.splice(updatedMovieIndex, 1, savedMovie);\r\n            return moviesFromAPI\r\n        })\r\n        setMainMoviesList(moviesFromAPI) // обновленный массив в рабочий список для поиска\r\n        localStorage.setItem('moviesList', JSON.stringify(moviesFromAPI)) // обновленный массив в localStorage\r\n        setQueryString(query)\r\n    }\r\n\r\n\r\n    // запрос - ч/з арi или из localstorage\r\n    const handleSubmitSearchForm = (query) => {\r\n        setMessage('')\r\n        if (mainMoviesList.length) { // список всех фильмов из localStorage\r\n            setQueryString(query)\r\n        } else {\r\n            setIsSubmitting(true)\r\n            moviesApi.getMovies()\r\n                .then((moviesFromAPI) => {\r\n                    updateLocalLists(moviesFromAPI, query)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    setMessage('Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз')\r\n                    setInfoTooltipOpen(true)\r\n                })\r\n                .finally(() => setIsSubmitting(false))\r\n        }\r\n    }\r\n\r\n\r\n    const handleCheckboxChange = (isCheckboxOn) => {\r\n        setMessage('')\r\n        setCheckboxActive(isCheckboxOn)\r\n    }\r\n\r\n\r\n    const closeInfoTooltip = () => {\r\n        setInfoTooltipOpen(false)\r\n        setMessage('')\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='movies'>\r\n\r\n            {isSubmitting && <Preloader />}\r\n\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n\r\n            <SearchForm\r\n                handleSubmitSearchForm={handleSubmitSearchForm}\r\n                handleCheckboxChange={handleCheckboxChange}\r\n            />\r\n\r\n            {\r\n                infoTooltipOpen ?\r\n                    <InfoTooltip\r\n                        closePopup={closeInfoTooltip}\r\n                        icon={UnionX}\r\n                        notification={message}\r\n                    />\r\n                    :\r\n                    <MoviesCardList\r\n                        moviesList={\r\n                            shortListForRender.length ?\r\n                                shortListForRender\r\n                                :\r\n                                listForRender\r\n                        }\r\n                        message={message}\r\n                    />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Movies","import React from 'react'\r\n\r\nimport './MoviesSaved.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport { getMyMovies } from '../../utils/MainApi'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst SavedMovies = React.memo(({ loggedIn }) => {\r\n\r\n    const [myFavoriteMoviesList, setMyFavoriteMoviesList] = React.useState([]) // из апи\r\n    const [favoriteListForRender, setFavoriteListForRender] = React.useState([])\r\n    const [shortFavoriteListForRender, setShortFavoriteListForRender] = React.useState([])\r\n    const [checkboxActive, setCheckboxActive] = React.useState(false)\r\n    const [message, setMessage] = React.useState('')\r\n    const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n    const [queryString, setQueryString] = React.useState('')\r\n\r\n\r\n    // при монтировании - в осн. стейт сохраненные фильмы от API\r\n    React.useEffect(() => {\r\n        setIsSubmitting(true)\r\n        getMyMovies()\r\n            .then((moviesArray) => {\r\n                setMyFavoriteMoviesList(moviesArray)\r\n                localStorage.setItem('myFavoriteMoviesList', JSON.stringify(moviesArray))\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => setIsSubmitting(false))\r\n    }, [])\r\n\r\n\r\n    // обработка запроса от формы поиска \r\n    React.useEffect(() => {\r\n        if (queryString) {\r\n            const newList = myFavoriteMoviesList.filter((movie) =>\r\n                movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n            newList.length ? setFavoriteListForRender(newList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setFavoriteListForRender(myFavoriteMoviesList)\r\n        }\r\n    }, [queryString, checkboxActive])\r\n\r\n\r\n    // обработка чекбокса\r\n    React.useEffect(() => {\r\n        if (checkboxActive && favoriteListForRender.length) {\r\n            const newShortList =\r\n                favoriteListForRender.filter(movie => movie.duration <= 40)\r\n            newShortList.length ? setShortFavoriteListForRender(newShortList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setShortFavoriteListForRender([])\r\n        }\r\n    }, [checkboxActive, favoriteListForRender])\r\n\r\n\r\n    const handleSubmitSearchForm = (query) => {\r\n        setMessage('')\r\n        setQueryString(query)\r\n    }\r\n\r\n    // для перерисовки ( > теперь - через setMovie('') в MoviesCard)\r\n    // const updateMyLocalMoviesList = (savedMovie) => {\r\n    //     setmyFavoriteMoviesList(myFavoriteMoviesList.splice(myFavoriteMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id)), 1, savedMovie)\r\n    // }\r\n\r\n    const handleCheckboxChange = (isCheckboxOn) => {\r\n        setMessage('')\r\n        setCheckboxActive(isCheckboxOn)\r\n    }\r\n\r\n    const closeInfoTooltip = () => {\r\n        setInfoTooltipOpen(false)\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <section className='movies-saved'>\r\n\r\n            {isSubmitting && <Preloader />}\r\n\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n\r\n            <SearchForm\r\n                handleSubmitSearchForm={handleSubmitSearchForm}\r\n                handleCheckboxChange={handleCheckboxChange}\r\n            />\r\n\r\n            {\r\n                infoTooltipOpen ?\r\n                    <InfoTooltip\r\n                        closePopup={closeInfoTooltip}\r\n                        icon={UnionX}\r\n                        notification={message}\r\n                    />\r\n                    :\r\n                    <MoviesCardList\r\n                        moviesList={\r\n                            shortFavoriteListForRender.length ?\r\n                                shortFavoriteListForRender\r\n                                :\r\n                                favoriteListForRender.length ?\r\n                                    favoriteListForRender\r\n                                    :\r\n                                    myFavoriteMoviesList\r\n                        }\r\n                        message={message}\r\n                    />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default SavedMovies","import React from 'react'\r\nimport './Profile.css'\r\nimport Header from '../Header/Header'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\n\r\nconst Profile = React.memo(({ loggedIn, handleSubmitUpdateUser, handleLogout }) => {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(true) // при загрузке исправить на true\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [wrongName, setWrongName] = React.useState(false)\r\n    const [wrongEmail, setWrongEmail] = React.useState(false) // ошибка результата запроса\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            setName(currentUser.name)\r\n            setEmail(currentUser.email)\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            wrongName || wrongEmail || (name === currentUser.name && email === currentUser.email)\r\n                ?\r\n                setButtonDisabled(true)\r\n                :\r\n                setButtonDisabled(false)\r\n        }\r\n    }, [wrongName, wrongEmail, email, name, currentUser])\r\n\r\n    const handleClick = (evt) => {\r\n        evt.preventDefault()\r\n        handleSubmitUpdateUser({ name, email })\r\n    }\r\n\r\n    const handleNameInput = (evt) => {\r\n        setName(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongName(evt.target.validationMessage)\r\n            :\r\n            setWrongName('')\r\n    }\r\n\r\n    const handleEmailInput = (evt) => {\r\n        setEmail(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongEmail(evt.target.validationMessage)\r\n            :\r\n            setWrongEmail('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n            <section className='profile'>\r\n                <h2 className='profile__title'>Привет, {currentUser && currentUser.name}!</h2>\r\n\r\n                <form className='profile__form' onSubmit={handleClick} id='updateUser'>\r\n                    <label className='profile__label'>Имя\r\n                        <input\r\n                            id='name'\r\n                            name='name'\r\n                            type='text'\r\n                            className={`profile__input ${wrongName && 'profile__input_wrong'}`}\r\n                            value={name}\r\n                            onChange={handleNameInput}\r\n                            formNoValidate\r\n                            minLength='2'\r\n                            maxLength='30'\r\n                            pattern='^[A-Za-zА-Яа-яЁё\\s\\-]*$'\r\n                            title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n                        />\r\n                    </label>\r\n\r\n                    <label className='profile__label'>E-mail\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='email'\r\n                            className={`profile__input ${wrongEmail && 'profile__input_wrong'}`}\r\n                            value={email}\r\n                            onChange={handleEmailInput}\r\n                            formNoValidate\r\n                            pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n                            title=\"поле может содержать только электронный адрес\"\r\n                        />\r\n                    </label>\r\n\r\n                </form>\r\n                <>\r\n                    {\r\n                        wrongName &&\r\n                        <span className='profile__input-error name-error'>{wrongName}</span>\r\n                    }\r\n                    {\r\n                        wrongEmail &&\r\n                        <span className='profile__input-error email-error'>{wrongEmail}</span>\r\n                    }\r\n                </>\r\n\r\n                <div className='profile__bottom'>\r\n                    <button\r\n                        className={`profile__submit ${buttonDisabled && 'profile__submit_disabled'}`}\r\n                        form='updateUser'\r\n                        disabled={buttonDisabled}\r\n                        type='submit'>Редактировать\r\n                    </button>\r\n                    <button\r\n                        className='profile__submit profile__submit_color'\r\n                        onClick={handleLogout}\r\n                        type='button'>Выйти из аккаунта\r\n                    </button>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Profile","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './PageNotFound.css'\r\n\r\nconst PageNotFound = React.memo(() => {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className='not-found__container'>\r\n            <h3 className='not-found__404'>404</h3>\r\n            <p className='not-found__message'>Страница не найдена</p>\r\n            <Link className='not-found__return' to='' onClick={history.goBack}>Назад</Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PageNotFound","export default __webpack_public_path__ + \"static/media/union-v.a9eb6caf.svg\";","import React from 'react'\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport './App.css'\r\nimport ProtectedRoute from '../ProtectedRoute';\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\nimport Register from '../Register/Register'\r\nimport Login from '../Login/Login'\r\nimport Footer from '../Footer/Footer'\r\nimport Main from '../Main/Main'\r\nimport Movies from '../Movies/Movies'\r\nimport SavedMovies from '../MoviesSaved/MoviesSaved'\r\nimport Profile from '../Profile/Profile'\r\nimport PageNotFound from '../PageNotFound/PageNotFound'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport { register, authorize, deleteAuth, getUser, updateUser } from '../../utils/MainApi'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionV from '../../images/union-v.svg'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\nfunction App() {\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const [currentUser, setCurrentUser] = React.useState()\r\n  const [loggedIn, setLoggedIn] = React.useState(false)\r\n  const withFooterURL = ['/', '/movies', '/saved-movies']\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n  const [messageErr, setMessageErr] = React.useState('')\r\n\r\n  // function isEmpty(obj) {\r\n  //   for (let key in obj) {\r\n  //     // если тело цикла начнет выполняться - значит в объекте есть свойства\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // }\r\n\r\n  // авторизация при входе\r\n  React.useEffect(() => {\r\n    if (localStorage.isAuth) {\r\n      getUser()\r\n        .then((userData) => {\r\n          console.log(userData)\r\n          setLoggedIn(true); // xxxxxxxxxxxxxxxxxxxxxxxx ЗАЧЕМ\r\n          setCurrentUser(userData);\r\n          history.push(location.pathname)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          history.push('/signin')\r\n        })\r\n    }\r\n  }, []);\r\n\r\n\r\n  const openPopupErr = (err) => {\r\n    setMessageErr(`В ответе на Ваш запрос сервером возвращена ошибка - ${err}`)\r\n    setInfoTooltipOpen(true)\r\n  }\r\n\r\n\r\n  // регистрация пользователя\r\n  const handleRegistrationSubmit = ({ name, email, password }) => {\r\n    setIsSubmitting(true)\r\n    register({ name, email, password })\r\n      .then(() => {\r\n        setInfoTooltipOpen(true)\r\n        setTimeout(() => {\r\n          handleLoginSubmit({ email, password })\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => openPopupErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n  // авторизация пользователя\r\n  const handleLoginSubmit = ({ email, password }) => {\r\n    setIsSubmitting(true)\r\n    authorize({ email, password })\r\n      .then((userData) => {\r\n        setLoggedIn(true)\r\n        setCurrentUser(userData);\r\n        localStorage.setItem('isAuth', true) // маркер - true/false\r\n        history.push('/movies')\r\n      })\r\n      .catch((err) => openPopupErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n  // выйти из аккаунта\r\n  const handleLogout = () => {\r\n    setIsSubmitting(true)\r\n    deleteAuth()\r\n      .then(() => {\r\n        setLoggedIn(false)\r\n        setCurrentUser()\r\n        history.push('/')\r\n        localStorage.removeItem('isAuth')\r\n        localStorage.removeItem('moviesList') // - или по истечении ВРЕМЕНИ\r\n      })\r\n      .catch((err) => openPopupErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n  // обновить данные пользователя\r\n  const handleSubmitUpdateUser = ({ name, email }) => {\r\n    setIsSubmitting(true)\r\n    updateUser({ name, email })\r\n      .then(userData => {\r\n        setInfoTooltipOpen(true)\r\n        setCurrentUser(userData)\r\n        setTimeout(() => {\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => openPopupErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  const closePopup = () => {\r\n    setInfoTooltipOpen(false)\r\n    setMessageErr('')\r\n  }\r\n\r\n\r\n  return (\r\n    <CurrentUser.Provider value={currentUser}>\r\n\r\n      {isSubmitting && <Preloader />}\r\n\r\n      <div className='app'>\r\n\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Main\r\n              loggedIn={loggedIn}\r\n            />\r\n          </Route>\r\n\r\n          <ProtectedRoute exact path='/movies'\r\n            component={Movies}\r\n            loggedIn={loggedIn}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/saved-movies'\r\n            component={SavedMovies}\r\n            loggedIn={loggedIn}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/profile'\r\n            component={Profile}\r\n            loggedIn={loggedIn}\r\n            handleLogout={handleLogout}\r\n            handleSubmitUpdateUser={handleSubmitUpdateUser}\r\n          />\r\n\r\n          <Route exact path='/signin'>\r\n            <Login\r\n              handleLoginSubmit={handleLoginSubmit}\r\n              messageErr={messageErr}\r\n            />\r\n          </Route>\r\n\r\n          <Route exact path='/signup'>\r\n            <Register\r\n              handleRegistrationSubmit={handleRegistrationSubmit}\r\n              messageErr={messageErr}\r\n            />\r\n          </Route>\r\n\r\n          <Route path='*'>\r\n            <PageNotFound />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {withFooterURL.includes(location.pathname) && <Footer />}\r\n\r\n        {\r\n          infoTooltipOpen &&\r\n          <InfoTooltip\r\n            closePopup={closePopup}\r\n            icon={messageErr ? UnionX : UnionV}\r\n            notification={messageErr ? messageErr : 'Запрос выполнен успешно!'}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </CurrentUser.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\nreportWebVitals();\r\n"],"sourceRoot":""}