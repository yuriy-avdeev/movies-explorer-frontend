{"version":3,"sources":["contexts/CurrentUserContext.js","components/ProtectedRoute.js","components/ProtectedRouteAuth.js","images/logo.svg","components/Access/Access.js","components/Validation/Validation.js","utils/conf.js","components/Register/Register.js","components/Login/Login.js","components/Footer/Footer.js","images/icon-menu.svg","components/Navigation/Navigation.js","components/Popup/Popup.js","components/Header/Header.js","components/Promo/Promo.js","components/NavTab/NavTab.js","components/AboutProject/AboutProject.js","components/Techs/Techs.js","images/photo.jpg","images/arrow.svg","components/GridArea/GridArea.js","components/AboutMe/AboutMe.js","components/Main/Main.js","utils/MainApi.js","components/Preloader/Preloader.js","components/InfoTooltip/InfoTooltip.js","images/union-x.svg","components/MoviesCard/MoviesCard.js","components/MoviesCardList/MoviesCardList.js","images/find.svg","components/SearchForm/SearchForm.js","components/Movies/Movies.js","components/MoviesSaved/MoviesSaved.js","components/Profile/Profile.js","components/PageNotFound/PageNotFound.js","utils/MoviesApi.js","images/union-v.svg","components/App/App.js","reportWebVitals.js","index.js"],"names":["CurrentUser","React","createContext","ProtectedRoute","props","currentUser","useContext","component","to","Access","memo","nextHandleSubmit","greeting","button","isRegistrated","link","messageErr","location","useLocation","history","useHistory","handleForm","useState","errors","setErrors","values","setValues","isValid","setIsValid","handleChange","useCallback","evt","name","target","value","form","closest","validationMessage","elements","length","Object","keys","checkValidity","resetForm","newIsValid","useFormWithValidation","buttonDisabled","setButtonDisabled","useEffect","className","src","logo","onClick","push","alt","onSubmit","preventDefault","id","pathname","type","placeholder","this","onChange","minLength","maxLength","pattern","title","email","password","disabled","config","Register","handleRegistrationSubmit","Login","handleLoginSubmit","Footer","date","Date","href","rel","getFullYear","Navigation","activeClassName","Popup","closePopup","Content","buttonClose","viewportWidth","handleEsc","key","document","addEventListener","removeEventListener","currentTarget","Header","navigationPopup","setNavigationPopup","resolution","window","matchMedia","matches","setViewportWidth","onchange","menuImage","Promo","NavTab","smooth","AboutProject","Techs","GridArea","photo","arrow","AboutMe","Main","apiURL","checkResponse","res","ok","json","Promise","reject","status","statusText","register","a","fetch","credentials","method","headers","body","JSON","stringify","authorize","deleteAuth","getUser","updateUser","addToMyMoviesList","movie","country","director","duration","year","description","trailerLink","nameRU","nameEN","image","url","thumbnail","formats","getMyMovies","deleteFromMyMoviesList","_id","Preloader","InfoTooltip","icon","notification","MoviesCard","incomingMovie","setMovie","setDuration","owner","saved","setSaved","mouseOver","setMouseOver","trailerVisible","setTrailerVisible","videoUrlForPopup","setVideoUrlForPopup","setMessageErr","isSubmitting","setIsSubmitting","infoTooltipOpen","setInfoTooltipOpen","hasEmptyField","setHasEmptyField","console","log","dur","Number","h","Math","floor","m","String","indexOf","split","openPopupErr","err","updateLocalLists","savedMovie","baseMoviesList","parse","sessionStorage","getItem","movieIndex","findIndex","existedMovie","splice","setItem","listOfFound","localStorage","movIndex","myFavoriteMoviesList","concat","index","clickDelete","then","deletedMovie","__v","catch","finally","onMouseOver","onMouseLeave","frameBorder","allowFullScreen","UnionX","MoviesCardList","moviesList","message","moviesToRender","setMoviesToRender","buttonVisible","setButtonVisible","numbers","setNumbers","innerWidth","screenWidth","setScreenWidth","handleResize","setTimeout","max","slice","map","SearchForm","handleSubmitSearchForm","handleCheckboxChange","isCheckboxOn","setIsCheckboxOn","query","setQuery","inputIsEmpty","setInputIsEmpty","e","style","backgroundImage","find","Movies","loggedIn","listForRender","setListForRender","shortListForRender","setShortListForRender","queryString","setQueryString","checkboxActive","setCheckboxActive","setMessage","newList","filter","toLowerCase","newShortList","SavedMovies","setMyFavoriteMoviesList","favoriteListForRender","setFavoriteListForRender","shortFavoriteListForRender","setShortFavoriteListForRender","Profile","handleSubmitUpdateUser","handleLogout","setName","setEmail","wrongName","setWrongName","wrongEmail","setWrongEmail","formNoValidate","PageNotFound","go","MoviesApi","_url","_headers","_checkResponse","moviesApi","App","setCurrentUser","setErr","isAuth","userData","updateMoviesLists","myMoviesArray","getMovies","mainMoviesArray","temporaryList","Provider","exact","path","clear","ProtectedRouteAuth","includes","UnionV","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bedbdd07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CurrentUser = React.createContext();","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n\r\n    return (\r\n        <Route>\r\n            {currentUser ? <props.component {...props} /> : <Redirect to='/signin' />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { CurrentUser } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction ProtectedRoute({ ...props }) {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n\r\n    return (\r\n        <Route>\r\n            {!currentUser ? <props.component {...props} /> : <Redirect to='/' />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","export default __webpack_public_path__ + \"static/media/logo.c26504b6.svg\";","import React from 'react'\r\nimport { Link, useLocation, useHistory } from 'react-router-dom'\r\nimport { useFormWithValidation } from '../Validation/Validation'\r\nimport './Access.css'\r\nimport logo from '../../images/logo.svg'\r\n\r\nconst Access = React.memo(({ nextHandleSubmit, greeting, button, isRegistrated, link, messageErr }) => {\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const handleForm = useFormWithValidation()\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(true)\r\n\r\n\r\n    React.useEffect(() => {\r\n        handleForm.isValid ? setButtonDisabled(false) : setButtonDisabled(true)\r\n    }, [handleForm.isValid])\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        nextHandleSubmit(handleForm.values)\r\n        handleForm.resetForm()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='access'>\r\n\r\n            <div className='access__top'>\r\n                <img className='logo' src={logo} onClick={() => history.push('/')} alt='логотип' />\r\n                <h2 className='access__title'>{greeting}</h2>\r\n            </div>\r\n\r\n            <form className='access__form' onSubmit={handleSubmit} id='access'>\r\n                {location.pathname === '/signup' &&\r\n                    <>\r\n                        <label className='access__label'>Имя\r\n                            <input\r\n                                id='name'\r\n                                name='name'\r\n                                type='text'\r\n                                placeholder='name'\r\n                                className={`access__input ${handleForm.errors.name && 'access__input_wrong'}`}\r\n                                value={handleForm.values.this}\r\n                                onChange={handleForm.handleChange}\r\n                                // formNoValidate\r\n                                minLength='2'\r\n                                maxLength='30'\r\n                                pattern='^[A-Za-zА-Яа-яЁё\\s\\-]{2,30}$'\r\n                                title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n                            />\r\n                        </label>\r\n                        {\r\n                            handleForm.errors.name &&\r\n                            <span className='access__input-error'>{handleForm.errors.name}</span>\r\n                        }\r\n                    </>\r\n                }\r\n\r\n                <label className='access__label'>E-mail\r\n                    <input\r\n                        id='email'\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='e-mail'\r\n                        className={`access__input ${handleForm.errors.email && 'access__input_wrong'}`}\r\n                        value={handleForm.values.this}\r\n                        onChange={handleForm.handleChange}\r\n                        // formNoValidate\r\n                        pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n                        title=\"поле должно содержать формат электронного адреса\"\r\n                    />\r\n                </label>\r\n                {\r\n                    handleForm.errors.email &&\r\n                    <span className='access__input-error'>{handleForm.errors.email}</span>\r\n                }\r\n\r\n                <label className='access__label'>Пароль\r\n                    <input\r\n                        id='password'\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='password'\r\n                        className={`access__input ${handleForm.errors.password && 'access__input_wrong'}`}\r\n                        value={handleForm.values.this}\r\n                        onChange={handleForm.handleChange}\r\n                        // formNoValidate\r\n                        minLength='6'\r\n                        maxLength='30'\r\n                        title=\"поле должно содержать не менее 6 и не более 30 знаков\"\r\n                    />\r\n                </label>\r\n                {\r\n                    handleForm.errors.password &&\r\n                    <span className='access__input-error'>{handleForm.errors.password}</span>\r\n                }\r\n\r\n            </form>\r\n\r\n            <div className='access__bottom'>\r\n                {messageErr &&\r\n                    <p className=\"access__message\">{messageErr}</p>}\r\n\r\n                <button\r\n                    className={`access__submit ${buttonDisabled && 'access__submit_disabled'}`}\r\n                    form='access'\r\n                    disabled={buttonDisabled}\r\n                    type='submit'\r\n                >\r\n                    {button}\r\n                </button>\r\n\r\n                <p className='access__is-registrated'>{isRegistrated}\r\n                    <Link\r\n                        to={location.pathname === '/signin' ? '/signup' : '/signin'}\r\n                        className='access__link'\r\n                        target='_self'\r\n                    >\r\n                        {link}\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Access","import React, { useCallback } from \"react\";\r\n\r\n//хук управления и валидации формы\r\nexport const useFormWithValidation = () => {\r\n\r\n  const [errors, setErrors] = React.useState({})\r\n  const [values, setValues] = React.useState({});\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n\r\n  const handleChange = useCallback((evt) => {\r\n    const name = evt.target.name\r\n    const value = evt.target.value\r\n    const form = evt.target.closest(\"form\")\r\n    setValues({ ...values, [name]: value })\r\n    setErrors({ ...errors, [name]: evt.target.validationMessage })\r\n    // если колич. элементов формы минус 1 (т.е. button) === длине массива инпутов\r\n    if ((form.elements.length - 1) === Object.keys(values).length) {\r\n      // checkValidity возвр. true-false\r\n      setIsValid(form.checkValidity())\r\n    }\r\n  },\r\n    [errors, values]\r\n  )\r\n\r\n  const resetForm = useCallback((newErrors = {}, newIsValid = false) => {\r\n    setErrors(newErrors);\r\n    setIsValid(newIsValid);\r\n  },\r\n    // useCallback вернёт мемоиз-ю версию колбэка при изме одной из зависимостей\r\n    [setErrors, setIsValid] // зависимости\r\n  )\r\n\r\n  return { values, handleChange, errors, isValid, resetForm };\r\n}","export const config = {\r\n    queryErr: 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз',\r\n    mainTitle: 'Учебный проект студента факультета Веб-разработки.',\r\n    aboutMeName: 'Юрий',\r\n    aboutMeInfo: 'Фронтенд-разработчик, 43 года',\r\n    aboutMeText: 'Я живу в Москве, у меня высшее юридическое образование, но основной отрезок профессиональной карьеры пришёлся на строительную сферу. У меня есть жена и четыре прекрасных ребёнка. Мне нравится смотреть хорошее кино и путешествовать с семьёй. Недавно я открыл для себя ещё одно увлечение - веб-разработка. И после того, как прошёл курс обучения, я решил полностью посвятить себя любимому делу.',\r\n    login: {\r\n        greeting: 'Рады видеть!',\r\n        button: 'Войти',\r\n        isRegistrated: 'Ещё не зарегистрированы?',\r\n        link: 'Регистрация'\r\n    },\r\n    register: {\r\n        greeting: 'Добро пожаловать!',\r\n        button: 'Зарегистрироваться',\r\n        isRegistrated: 'Уже зарегистрированы?',\r\n        link: 'Войти'\r\n    },\r\n}","import React from 'react'\r\nimport Access from '../Access/Access'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Register = React.memo(({ handleRegistrationSubmit, messageErr }) => {\r\n\r\n    return (\r\n        <Access\r\n            nextHandleSubmit={handleRegistrationSubmit}\r\n            greeting={config.register.greeting}\r\n            button={config.register.button}\r\n            isRegistrated={config.register.isRegistrated}\r\n            link={config.register.link}\r\n            messageErr={messageErr}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Register","import React from 'react'\r\nimport Access from '../Access/Access'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Login = React.memo(({ handleLoginSubmit, messageErr }) => {\r\n\r\n    return (\r\n        <Access\r\n            nextHandleSubmit={handleLoginSubmit}\r\n            greeting={config.login.greeting}\r\n            button={config.login.button}\r\n            isRegistrated={config.login.isRegistrated}\r\n            link={config.login.link}\r\n            messageErr={messageErr}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Login","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = React.memo(() => {\r\n\r\n    const date = new Date()\r\n\r\n    return (\r\n        <footer className='footer'>\r\n            <h4 className='footer__information'>Учебный проект Яндекс.Практикум х BeatFilm.</h4>\r\n            <ul className='footer__links-list'>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://practicum.yandex.ru' target='_blank' rel='noreferrer'>Яндекс.Практикум</a>\r\n                </li>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://github.com' target='_blank' rel='noreferrer'>Github</a>\r\n                </li>\r\n                <li className='footer__list-item'>\r\n                    <a className='footer__link' href='https://www.facebook.com' target='_blank' rel='noreferrer'>Facebook</a>\r\n                </li>\r\n            </ul>\r\n            <p className='footer__copyright'>&copy; {date.getFullYear()}</p>\r\n        </footer>\r\n    )\r\n})\r\n\r\nexport default Footer","export default __webpack_public_path__ + \"static/media/icon-menu.4b1de763.svg\";","import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport './Navigation.css'\r\n\r\nconst Navigation = React.memo(() => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div className='navigation'>\r\n\r\n            <nav className='navigation__container'>\r\n                <NavLink to='/' className={`navigation__link navigation__link_main  ${location.pathname === '/' && 'navigation__link_active'}`} target='_self'>\r\n                    Главная\r\n                </NavLink>\r\n                <NavLink to='/movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n                    Фильмы\r\n                </NavLink>\r\n                <NavLink to='/saved-movies' className='navigation__link' activeClassName='navigation__link_active' target='_self'>\r\n                    Сохранённые фильмы\r\n                </NavLink>\r\n            </nav>\r\n\r\n            <div className='navigation__account-container'>\r\n                <NavLink to='/profile' className='navigation__account-link' activeClassName='navigation__link_active' target='_self'>\r\n                    Аккаунт\r\n                </NavLink>\r\n                <div className='navigation__account-image'></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navigation\r\n\r\n","import React from 'react'\r\n\r\nimport './Popup.css'\r\n\r\nconst Popup = (({ closePopup, Content, buttonClose, viewportWidth }) => {\r\n\r\n    const handleFieldClick = (evt) => {\r\n        evt.target === evt.currentTarget && closePopup()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const handleEsc = (evt) => {\r\n            evt.key === 'Escape' && closePopup()\r\n        }\r\n\r\n        viewportWidth && closePopup()\r\n\r\n        document.addEventListener('keyup', handleEsc)\r\n\r\n        return () => {\r\n            document.removeEventListener('keyup', handleEsc)\r\n        }\r\n\r\n    }, [closePopup, viewportWidth])\r\n\r\n\r\n    return (\r\n        <div className='popup' onClick={handleFieldClick}>\r\n                {\r\n                    buttonClose &&\r\n                    <button className='popup__close' type='button' onClick={closePopup}></button>\r\n                }\r\n                {Content}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Popup","import React from 'react'\r\nimport { useLocation, useHistory, Link } from 'react-router-dom'\r\nimport './Header.css'\r\nimport logo from '../../images/logo.svg'\r\nimport menuImage from '../../images/icon-menu.svg'\r\nimport Navigation from '../Navigation/Navigation'\r\nimport Popup from '../Popup/Popup'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\n\r\nconst Header = React.memo(() => {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n    const location = useLocation() // или > { pathname } = useLocation()\r\n    const history = useHistory()\r\n    const [navigationPopup, setNavigationPopup] = React.useState(false)\r\n    const resolution = window.matchMedia('(min-width: 800px)') // медиа-запрос в конст., возвр. объект\r\n    const [viewportWidth, setViewportWidth] = React.useState(resolution.matches) // св-во объекта ответа - true - если document сейчас соот-т медиа-запросу\r\n\r\n\r\n    React.useEffect(() => {\r\n        resolution.onchange = () => { // переход через 800рх\r\n            resolution.matches ? // => true / false\r\n                setViewportWidth(true)\r\n                :\r\n                setViewportWidth(false)\r\n        }\r\n        return resolution.onchange\r\n    }, [resolution])\r\n\r\n\r\n    const openPopup = () => {\r\n        setNavigationPopup(true)\r\n    }\r\n\r\n\r\n    const closePopup = () => {\r\n        setNavigationPopup(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <header className={`header ${location.pathname === '/' && 'header__type_color'}`}>\r\n\r\n            <div className='header__wrap'>\r\n                <img className='logo' src={logo} onClick={() => history.push('/')} alt='логотип' />\r\n                {\r\n                    !currentUser ?\r\n                        <nav className='header__nav-container'>\r\n                            <Link to='/signup' className='header__link_word' target='_self'>Регистрация</Link>\r\n                            <Link to='/signin' className='header__link_button' target='_self'>Войти</Link>\r\n                        </nav>\r\n                        :\r\n                        <>\r\n                            {viewportWidth ?\r\n                                <Navigation />\r\n                                :\r\n                                <img className='header__nav-icon' src={menuImage} alt='иконка меню' onClick={openPopup} />\r\n                            }\r\n                        </>\r\n                }\r\n                {\r\n                    navigationPopup &&\r\n                    <Popup\r\n                        closePopup={closePopup}\r\n                        Content={<Navigation />}\r\n                        buttonClose={true}\r\n                        viewportWidth={viewportWidth}\r\n                    />\r\n                }\r\n            </div>\r\n            \r\n        </header >\r\n    )\r\n})\r\n\r\nexport default Header","import React from 'react'\r\nimport './Promo.css'\r\nimport { config } from '../../utils/conf'\r\n\r\nconst Promo = React.memo(() => {\r\n    return (\r\n        <section className='promo'>\r\n            <h1 className='promo__titile'>{config.mainTitle}</h1>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Promo","import React from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport './NavTab.css';\r\n\r\nconst NavTab = React.memo(() => {\r\n    return (\r\n        <nav className='nav-tab'>\r\n\r\n            <HashLink smooth to='/#about-project' className='nav-tab__link'>\r\n                О проекте\r\n            </HashLink>\r\n\r\n            <HashLink smooth to='/#techs' className='nav-tab__link'>\r\n                Технологии\r\n            </HashLink>\r\n\r\n            <HashLink smooth to='/#about-me' className='nav-tab__link'>\r\n                Студент\r\n            </HashLink>\r\n\r\n        </nav>\r\n    )\r\n});\r\n\r\nexport default NavTab;","import React from 'react'\r\nimport './AboutProject.css'\r\n\r\nconst AboutProject = React.memo(() => {\r\n    return (\r\n\r\n        <section className='project' id='about-project'>\r\n\r\n            <h2 className='project__title'>О проекте</h2>\r\n\r\n            <ul className='project__about-list'>\r\n                <li className='project__about-list-item'>\r\n                    <h3 className='project__about-list-title'>\r\n                        Дипломный проект включал 5 этапов\r\n                    </h3>\r\n                    <p className='project__about-list-text'>\r\n                        Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.\r\n                    </p>\r\n                </li>\r\n                <li className='project__about-list-item'>\r\n                    <h3 className='project__about-list-title'>\r\n                        На выполнение диплома ушло 5 недель\r\n                    </h3>\r\n                    <p className='project__about-list-text'>\r\n                        У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className='project__terms-list'>\r\n                <li className='project__terms-list-item'>\r\n                    <div className='project__terms-list-term project__terms-list-term_color'>1 неделя</div>\r\n                    <p className='project__terms-list-description'>Back-end</p>\r\n                </li>\r\n                <li className='project__terms-list-item'>\r\n                    <div className='project__terms-list-term'>4 недели</div>\r\n                    <p className='project__terms-list-description'>Front-end</p>\r\n                </li>\r\n            </ul>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default AboutProject","import React from 'react'\r\nimport './Techs.css'\r\n\r\nconst Techs = () => {\r\n    return (\r\n        <section className='techs' id='techs'>\r\n            <div className='techs__wrap'>\r\n            <h2 className='techs__title'>Технологии</h2>\r\n            <h3 className='techs__subtitle'>7 технологий</h3>\r\n            <p className='techs__text'>\r\n                На курсе веб-разработки мы освоили технологии, которые применили в дипломном проекте.\r\n            </p>\r\n            < div className='techs__container'>\r\n                <div className='techs__tech-icon'>HTML</div>\r\n                <div className='techs__tech-icon'>CSS</div>\r\n                <div className='techs__tech-icon'>JS</div>\r\n                <div className='techs__tech-icon'>React</div>\r\n                <div className='techs__tech-icon'>Git</div>\r\n                <div className='techs__tech-icon'>Express.js</div>\r\n                <div className='techs__tech-icon'>mongoDB</div>\r\n            </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Techs","export default __webpack_public_path__ + \"static/media/photo.b2691a65.jpg\";","export default __webpack_public_path__ + \"static/media/arrow.ceb3ba2e.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './GridArea.css'\r\nimport photo from '../../images/photo.jpg'\r\nimport arrow from '../../images/arrow.svg'\r\nimport { config } from '../../utils/conf'\r\n\r\n\r\nconst GridArea = React.memo(() => {\r\n\r\n    return (\r\n        <article className='grid-area'>\r\n\r\n            <img className='grid-area__photo' src={photo} alt='Фото пользователя' />\r\n\r\n            <div className='grid-area__info'>\r\n                <h3 className='grid-area__info-name'>{config.aboutMeName}</h3>\r\n                <h4 className='grid-area__info-about'>{config.aboutMeInfo}</h4>\r\n                <p className='grid-area__info-text'>{config.aboutMeText}</p>\r\n                <ul className='grid-area__info-links-list'>\r\n                    <li className='grid-area__links-item'>\r\n                        <Link to={{ pathname: 'https://www.facebook.com' }} className='grid-area__info-link' target='_blank'>Facebook</Link>\r\n                    </li>\r\n                    <li className='grid-area__links-item'>\r\n                        <Link to={{ pathname: 'https://github.com/yuryavdeev' }} className='grid-area__info-link' target='_blank'>Github</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className='grid-area__portfolio'>\r\n                <h3 className='grid-area__portfolio-title'>Портфолио</h3>\r\n                <ul className='grid-area__portfolio-links-list'>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Статичный сайт</p>\r\n                        <Link to={{ pathname: 'https://github.com/yuryavdeev/how-to-learn' }} className='grid-area__portfolio-link' target='_blank'>\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                    <hr className='grid-area__portfolio-border'></hr>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Адаптивный сайт</p>\r\n                        <Link to={{ pathname: 'https://yuryavdeev.github.io/russian-travel/index.html' }} className='grid-area__portfolio-link' target='_blank'>\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                    <hr className='grid-area__portfolio-border'></hr>\r\n                    <li className='grid-area__links-item'>\r\n                        <p className='grid-area__portfolio-name'>Одностраничное приложение</p>\r\n                        <Link to={{ pathname: 'https://yuryavdeev.github.io/mesto-react/' }} className='grid-area__portfolio-link' target='_blank'>\r\n\r\n                            <img className='grid-area__portfolio-arrow' src={arrow} alt='ссылка в виде стрелки' />\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </article >\r\n    )\r\n})\r\n\r\nexport default GridArea","import React from 'react'\r\nimport './AboutMe.css'\r\nimport GridArea from '../GridArea/GridArea'\r\n\r\n\r\nconst AboutMe = React.memo(() => {\r\n\r\n\r\n    return (\r\n        <section className='about-me' id='about-me'>\r\n            <h2 className='about-me__title'>Студент</h2>\r\n            <GridArea />         \r\n        </section >\r\n    )\r\n})\r\n\r\nexport default AboutMe","import React from 'react'\r\n\r\nimport './Main.css'\r\nimport Header from '../Header/Header'\r\nimport Promo from '../Promo/Promo'\r\nimport NavTab from '../NavTab/NavTab'\r\nimport AboutProject from '../AboutProject/AboutProject'\r\nimport Techs from '../Techs/Techs'\r\nimport AboutMe from '../AboutMe/AboutMe'\r\n\r\nconst Main = React.memo(() => {\r\n    return (\r\n        <section className='main'>\r\n            <Header />\r\n            <Promo />\r\n            <NavTab />\r\n            <AboutProject />\r\n            <Techs />\r\n            <AboutMe />\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Main","const apiURL = 'https://api.avdeev.movies.nomoredomains.monster';\r\n// const apiURL = 'http://localhost:3000';\r\n\r\nconst checkResponse = (res) => {\r\n    return res.ok ?\r\n        res.json()\r\n        :\r\n        Promise.reject(`код ${res.status}: ${res.statusText}`);\r\n}\r\n\r\nexport const register = async ({ name, email, password }) => {\r\n    const res = await fetch(`${apiURL}/signup`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const authorize = async ({ email, password }) => {\r\n    const res = await fetch(`${apiURL}/signin`, {\r\n        credentials: \"include\",\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\nexport const deleteAuth = async () => {\r\n    const res = await fetch(`${apiURL}/signout`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n    return checkResponse(res);\r\n}\r\n\r\n\r\nexport const getUser = async () => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const updateUser = async ({ name, email }) => {\r\n    const res = await fetch(`${apiURL}/users/me`, {\r\n        credentials: 'include',\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const addToMyMoviesList = async (movie) => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            trailerLink: movie.trailerLink,\r\n            id: movie.id,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n            image: movie.image.url ?\r\n                `https://api.nomoreparties.co${movie.image.url}`\r\n                :\r\n                movie.image,\r\n            thumbnail: movie.thumbnail ?\r\n                movie.thumbnail\r\n                :\r\n                `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`\r\n        })\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const getMyMovies = async () => {\r\n    const res = await fetch(`${apiURL}/movies`, {\r\n        credentials: 'include',\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n\r\nexport const deleteFromMyMoviesList = async (_id) => {\r\n    const res = await fetch(`${apiURL}/movies/${_id}`, {\r\n        credentials: 'include',\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n    return checkResponse(res)\r\n}\r\n","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className='preloader'>\r\n            <div className='preloader__container'>\r\n                <span className='preloader__round'></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\nimport Popup from '../Popup/Popup'\r\nimport './InfoTooltip.css'\r\n\r\nfunction InfoTooltip({ closePopup, icon, notification }) {\r\n\r\n    return (\r\n        <Popup\r\n            closePopup={closePopup}\r\n            Content={\r\n                <div className='info-tooltip__container'>\r\n                    <img className='info-tooltip__image' src={icon} alt={notification} />\r\n                    <p className='info-tooltip__notification'>{notification}</p>\r\n                </div>\r\n            }\r\n            buttonClose={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","export default __webpack_public_path__ + \"static/media/union-x.d4ce2a26.svg\";","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCard.css'\r\nimport Popup from '../Popup/Popup'\r\nimport { addToMyMoviesList, deleteFromMyMoviesList } from '../../utils/MainApi'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\nconst MoviesCard = React.memo(({ incomingMovie }) => {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n    const location = useLocation()\r\n    const [movie, setMovie] = React.useState(incomingMovie)\r\n    const [duration, setDuration] = React.useState('')\r\n    const [saved, setSaved] = React.useState(movie.owner === currentUser._id)\r\n    const [mouseOver, setMouseOver] = React.useState(false)\r\n    const [trailerVisible, setTrailerVisible] = React.useState(false)\r\n    const [videoUrlForPopup, setVideoUrlForPopup] = React.useState('')\r\n    const [messageErr, setMessageErr] = React.useState('')\r\n    const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n    const [hasEmptyField, setHasEmptyField] = React.useState('')\r\n\r\n\r\n    React.useEffect(() => {\r\n        for (const key in movie) {\r\n            if (movie[key] === '' || movie[key] === null) {\r\n                console.log(`Пустое поле ${key} у фильма - ${movie.nameRU}`)\r\n                setHasEmptyField(key)\r\n            }\r\n        }\r\n    }, [movie])\r\n\r\n\r\n    React.useEffect(() => {\r\n        const dur = Number(movie.duration)\r\n        const h = Math.floor(dur / 60)\r\n        const m = Math.floor(dur % 60)\r\n        setDuration(`${h}ч ${m}м`)\r\n    }, [movie.duration])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (hasEmptyField === 'trailerLink' || String(movie.trailerLink).indexOf('http') < 0) {\r\n            setHasEmptyField('trailerLink') // для != http...\r\n            setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n        } else {\r\n            String(movie.trailerLink).indexOf('v=') > -1 &&\r\n                setVideoUrlForPopup(String(movie.trailerLink).split('v=')[1])\r\n        }\r\n    }, [hasEmptyField, movie.trailerLink])\r\n\r\n\r\n    const openPopupErr = (err) => {\r\n        setMessageErr(`В ответе на Ваш запрос сервером возвращена ошибка - ${err}`)\r\n        setInfoTooltipOpen(true)\r\n    }\r\n\r\n\r\n    const showTrailer = () => {\r\n        !messageErr ? setTrailerVisible(true) : setInfoTooltipOpen(true)\r\n    }\r\n\r\n\r\n    const closePopup = () => {\r\n        setTrailerVisible(false)\r\n        setInfoTooltipOpen(false)\r\n    }\r\n\r\n\r\n    const updateLocalLists = (savedMovie) => {\r\n        // осн. список фильмов - для корр. отображения лайков на /movies после нового поиска\r\n        const baseMoviesList = JSON.parse(sessionStorage.getItem('baseMoviesList'))\r\n        const movieIndex = baseMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id)\r\n        // начиная с movieIndex удалить 1 элемент и заменить его в baseMoviesList:\r\n        baseMoviesList.splice(movieIndex, 1, savedMovie)\r\n        // обновил список фильмов в sessionStorage\r\n        sessionStorage.setItem('baseMoviesList', JSON.stringify(baseMoviesList))\r\n\r\n        // список фильмов после поиска - для корр. загрузки на /movies после возврата\r\n        let listOfFound = JSON.parse(localStorage.getItem('listOfFound'))\r\n        const movIndex = listOfFound.findIndex(existedMovie => existedMovie.id === savedMovie.id)\r\n        listOfFound.splice(movIndex, 1, savedMovie)\r\n        localStorage.setItem('listOfFound', JSON.stringify(listOfFound))\r\n\r\n        // список фильмов из избранного - для правильного отображения на /saved-movies после изменений списка на /movies\r\n        let myFavoriteMoviesList = JSON.parse(localStorage.getItem('myFavoriteMoviesList'))\r\n        // сохраняемый фильм =>\r\n        if (savedMovie.owner === currentUser._id) {\r\n            myFavoriteMoviesList = myFavoriteMoviesList.concat(savedMovie) // добавил\r\n            localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myFavoriteMoviesList)) // сохранил\r\n        }\r\n        // удаляемый фильм =>\r\n        else {\r\n            const index = myFavoriteMoviesList.findIndex(existedMovie => existedMovie.id === savedMovie.id) // <= индекс\r\n            myFavoriteMoviesList.splice(index, 1) // <= удалил\r\n            localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myFavoriteMoviesList)) // сохранил\r\n        }\r\n    }\r\n\r\n\r\n    const clickSaved = () => {\r\n        if (hasEmptyField) {\r\n            setMessageErr(`Недопустимое поле фильма - ${hasEmptyField}`)\r\n            setInfoTooltipOpen(true)\r\n        } else {\r\n            setIsSubmitting(true)\r\n            addToMyMoviesList(movie)\r\n                .then((savedMovie) => {\r\n                    setSaved(true)\r\n                    setMovie(savedMovie)\r\n                    updateLocalLists(savedMovie, currentUser._id)\r\n                })\r\n                .catch((err) => openPopupErr(err))\r\n                .finally(() => setIsSubmitting(false))\r\n        }\r\n    }\r\n\r\n\r\n    const clickDelete = () => {\r\n        setIsSubmitting(true)\r\n        deleteFromMyMoviesList(movie._id)\r\n            .then((deletedMovie) => {\r\n                const { owner, _id, __v, ...savedMovie } = deletedMovie // => объект фильма savedMovie без __v, owner и _id\r\n                updateLocalLists(savedMovie, currentUser._id)\r\n                setSaved(false)\r\n                location.pathname === '/saved-movies' ?\r\n                    setMovie('')\r\n                    :\r\n                    setMovie(savedMovie)\r\n            })\r\n            .catch((err) => openPopupErr(err))\r\n            .finally(() => setIsSubmitting(false))\r\n    }\r\n\r\n\r\n    return (\r\n        movie &&  // <= если удалил из избранного\r\n        <section className='movie'>\r\n\r\n            {\r\n                (videoUrlForPopup || messageErr) ?\r\n                    <img\r\n                        className='movie__image'\r\n                        onClick={() => showTrailer()}\r\n                        onMouseOver={() => setMouseOver(true)}\r\n                        onMouseLeave={() => setMouseOver(false)}\r\n                        // при обратном сохранении api вернул movie.image без url\r\n                        src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n                        alt='карточка фильма'\r\n                    />\r\n                    :\r\n                    <a className='movie__trailer-link' href={movie.trailerLink} target='_blank' rel='noreferrer'>\r\n                        <img\r\n                            className='movie__image'\r\n                            onMouseOver={() => setMouseOver(true)}\r\n                            onMouseLeave={() => setMouseOver(false)}\r\n                            src={movie.image.url ? `https://api.nomoreparties.co${movie.image.url}` : movie.image}\r\n                            alt='карточка фильма'\r\n                        />\r\n                    </a>\r\n            }\r\n\r\n            <div className='movie__bottom-container'>\r\n                <h3 className='movie__caption'>{movie.nameRU}</h3>\r\n                <p className='movie__duration'>{duration}</p>\r\n            </div>\r\n\r\n            {\r\n                location.pathname === '/saved-movies' ?\r\n                    <button\r\n                        className={`movie__favorites movie__favorites_delete ${mouseOver && 'movie__favorites_delete-active'}`}\r\n                        onMouseOver={() => setMouseOver(true)}\r\n                        onMouseLeave={() => setMouseOver(false)}\r\n                        onClick={clickDelete}\r\n                        aria-label='удаление из избранного'\r\n                    >\r\n                    </button>\r\n                    :\r\n                    saved ?\r\n                        <button\r\n                            className='movie__favorites movie__favorites_true'\r\n                            onClick={clickDelete}\r\n                            aria-label='удаление из избранного'\r\n                        >\r\n                        </button>\r\n                        :\r\n                        <button\r\n                            className=\r\n                            {`movie__favorites movie__favorites_false ${mouseOver && 'movie__favorites_false-active'} ${saved && 'movie__favorites_hidden'}`}\r\n                            onMouseOver={() => setMouseOver(true)}\r\n                            onClick={clickSaved}\r\n                            aria-label='добавить в избранное'\r\n                        >\r\n                            Сохранить\r\n                        </button>\r\n            }\r\n\r\n            {\r\n                trailerVisible &&\r\n                <Popup\r\n                    closePopup={closePopup}\r\n                    buttonClose={true}\r\n                    Content={\r\n                        <div className='movie__trailer-container'>\r\n                            <iframe\r\n                                className='movie__trailer'\r\n                                title='trailer-video'\r\n                                type='text/html'\r\n                                src={`https://www.youtube.com/embed/${videoUrlForPopup}`}\r\n                                frameBorder='0'\r\n                                allowFullScreen>\r\n                            </iframe>\r\n                        </div>\r\n                    }\r\n                />\r\n            }\r\n\r\n            {isSubmitting && <Preloader />}\r\n\r\n            {\r\n                infoTooltipOpen &&\r\n                <InfoTooltip\r\n                    closePopup={closePopup}\r\n                    icon={UnionX}\r\n                    notification={messageErr}\r\n                />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default MoviesCard","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport './MoviesCardList.css'\r\nimport MoviesCard from '../MoviesCard/MoviesCard'\r\n\r\nconst MoviesCardList = React.memo(({ moviesList, message }) => {\r\n\r\n    const location = useLocation()\r\n    const [moviesToRender, setMoviesToRender] = React.useState([])\r\n    const [buttonVisible, setButtonVisible] = React.useState(true)\r\n    const [numbers, setNumbers] = React.useState(0)\r\n    const [screenWidth, setScreenWidth] = React.useState(window.innerWidth)\r\n\r\n\r\n    React.useEffect(() => {\r\n        const handleResize = () => {\r\n            setScreenWidth(window.innerWidth)\r\n        }\r\n\r\n        location.pathname === '/movies' &&\r\n            window.addEventListener('resize', () => setTimeout(handleResize, 500))\r\n\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [location.pathname])\r\n\r\n\r\n    React.useEffect(() => {\r\n        setButtonVisible(true)\r\n        location.pathname === '/saved-movies'\r\n            ?\r\n            setNumbers(moviesList.length)\r\n            :\r\n            setNumbers(\r\n                (screenWidth >= 1137) ?\r\n                    3\r\n                    :\r\n                    (screenWidth < 768) ?\r\n                        1\r\n                        :\r\n                        2\r\n            )\r\n    }, [location.pathname, moviesList, screenWidth])\r\n\r\n    // numbers на первой загрузке и увеличении ширины экрана (зависимость) => отрисовать мин (3, 2, 1) или макс (своё значение)\r\n    React.useEffect(() => {\r\n        location.pathname === '/movies'\r\n            &&\r\n            setNumbers(\r\n                screenWidth >= 1137 ?\r\n                    Math.max(3, numbers)\r\n                    :\r\n                    screenWidth < 768 ?\r\n                        numbers\r\n                        :\r\n                        Math.max(2, numbers)\r\n            )\r\n    }, [location.pathname, numbers, screenWidth])\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        setMoviesToRender(\r\n            moviesList.slice(0, numbers).map(movie =>\r\n                <MoviesCard\r\n                    key={movie.id}\r\n                    incomingMovie={movie}\r\n                />\r\n            )\r\n        )\r\n        moviesList.length <= numbers && setButtonVisible(false)\r\n\r\n    }, [moviesList, numbers])\r\n\r\n\r\n    const addMoviesToScreen = () => {\r\n        setNumbers(\r\n            screenWidth >= 1137 ?\r\n                numbers + 3\r\n                :\r\n                numbers + 2\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='movies-card-list'>\r\n            {\r\n                message ?\r\n                    <p className=\"movies-card-list__message\">{message}</p>\r\n                    :\r\n                    <div className='movies-card-list__grid'>\r\n                        {moviesToRender}\r\n                    </div>\r\n            }\r\n            {\r\n                buttonVisible &&\r\n                !message &&\r\n                <button className='movies-card-list__button' onClick={addMoviesToScreen}>Ещё</button>\r\n            }\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default MoviesCardList","export default __webpack_public_path__ + \"static/media/find.0fcf493f.svg\";","import React from 'react'\r\n// import { useLocation } from 'react-router'\r\nimport './SearchForm.css'\r\nimport find from '../../images/find.svg'\r\n\r\nconst SearchForm = React.memo(({ handleSubmitSearchForm, handleCheckboxChange }) => {\r\n\r\n    // const location = useLocation()\r\n    const [isCheckboxOn, setIsCheckboxOn] = React.useState(false)\r\n    const [query, setQuery] = React.useState('')\r\n    const [inputIsEmpty, setInputIsEmpty] = React.useState(false)\r\n\r\n    const handleInput = (e) => {\r\n        setQuery(e.target.value)\r\n        setInputIsEmpty(false)\r\n    }\r\n\r\n    const listenCheckbox = () => {\r\n        handleCheckboxChange(!isCheckboxOn)\r\n        setIsCheckboxOn(!isCheckboxOn)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        !query\r\n            // &&\r\n            // location.pathname !== '/saved-movies'\r\n            ?\r\n            setInputIsEmpty(true)\r\n            :\r\n            handleSubmitSearchForm(query)\r\n    }\r\n\r\n    return (\r\n        <section className='search-container'>\r\n\r\n            <form className='search__form' onSubmit={handleSubmit}>\r\n                <label className='search__label-input'>\r\n                    <input\r\n                        className='search__input'\r\n                        placeholder='Фильмы'\r\n                        onChange={handleInput}\r\n                        value={query}\r\n                        type='text'\r\n                    />\r\n                </label>\r\n                {\r\n                    inputIsEmpty &&\r\n                    <span className='search__input-error'>Нужно ввести ключевое слово</span>\r\n                }\r\n                <button\r\n                    className='search__button'\r\n                    type='submit'\r\n                    style={{ backgroundImage: `url(${find})` }}\r\n                >\r\n                </button>\r\n                <hr className='search__border-line' />\r\n                <label className='search__label-checkbox'>Короткометражки\r\n                    <input\r\n                        className='search__checkbox'\r\n                        type='checkbox'\r\n                        onChange={listenCheckbox}\r\n                    />\r\n                    <span className='search__checkbox-visible'></span>\r\n                </label>\r\n            </form>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default SearchForm","import React from 'react'\r\n\r\nimport './Movies.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst Movies = React.memo(({ loggedIn }) => {\r\n\r\n    // const [baseMoviesList, setBaseMoviesList] = React.useState([])\r\n    const [listForRender, setListForRender] = React.useState([])\r\n    const [shortListForRender, setShortListForRender] = React.useState([])\r\n    const [queryString, setQueryString] = React.useState('')\r\n    const [checkboxActive, setCheckboxActive] = React.useState(false)\r\n    const [message, setMessage] = React.useState('')\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n\r\n\r\n    // при возврате - для отрисовки прошлого поиска\r\n    React.useEffect(() => {\r\n        localStorage.listOfFound && setListForRender(JSON.parse(localStorage.getItem('listOfFound')))\r\n    }, [checkboxActive])\r\n\r\n\r\n    // обработка запроса от формы поиска - в отд. компонент с MoviesSaved - ?\r\n    React.useEffect(() => {\r\n        if (queryString) {\r\n            const newList = JSON.parse(sessionStorage.getItem('baseMoviesList')).filter((movie) =>\r\n                movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n            if (newList.length) {\r\n                setListForRender(newList)\r\n                localStorage.setItem('listOfFound', JSON.stringify(newList)) // в localStorage <= для отрисовки при возврате\r\n            } else {\r\n                setMessage('Ничего не найдено')\r\n\r\n            }\r\n        }\r\n    }, [queryString, checkboxActive])\r\n\r\n\r\n    // обработка чекбокса - после поиска\r\n    React.useEffect(() => {\r\n        if (checkboxActive && listForRender.length) {\r\n            const newShortList = listForRender.filter(movie => movie.duration <= 40)\r\n            newShortList.length ?\r\n                setShortListForRender(newShortList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setShortListForRender([])\r\n        }\r\n    }, [checkboxActive, listForRender])\r\n\r\n\r\n    // запрос - данные из localstorage\r\n    const handleSubmitSearchForm = (query) => {\r\n        setMessage('')\r\n        setQueryString(query)\r\n    }\r\n\r\n\r\n    const handleCheckboxChange = (isCheckboxOn) => {\r\n        setMessage('')\r\n        setCheckboxActive(isCheckboxOn)\r\n    }\r\n\r\n\r\n    const closeInfoTooltip = () => {\r\n        setInfoTooltipOpen(false)\r\n        setMessage('')\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='movies'>\r\n\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n\r\n            <SearchForm\r\n                handleSubmitSearchForm={handleSubmitSearchForm}\r\n                handleCheckboxChange={handleCheckboxChange}\r\n            />\r\n\r\n            {\r\n                infoTooltipOpen ?\r\n                    <InfoTooltip\r\n                        closePopup={closeInfoTooltip}\r\n                        icon={UnionX}\r\n                        notification={message}\r\n                    />\r\n                    :\r\n                    <MoviesCardList\r\n                        moviesList={\r\n                            shortListForRender.length ?\r\n                                shortListForRender\r\n                                :\r\n                                listForRender\r\n                        }\r\n                        message={message}\r\n                    />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Movies","import React from 'react'\r\n\r\nimport './MoviesSaved.css'\r\nimport Header from '../Header/Header'\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList'\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\n\r\nconst SavedMovies = React.memo(({ loggedIn }) => {\r\n\r\n    const [myFavoriteMoviesList, setMyFavoriteMoviesList] = React.useState([])\r\n    const [favoriteListForRender, setFavoriteListForRender] = React.useState([])\r\n    const [shortFavoriteListForRender, setShortFavoriteListForRender] = React.useState([])\r\n    const [checkboxActive, setCheckboxActive] = React.useState(false)\r\n    const [message, setMessage] = React.useState('')\r\n    const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n    const [queryString, setQueryString] = React.useState('')\r\n\r\n\r\n    // при удалении из изб. и смене чекбокса - обновить\r\n    React.useEffect(() => {\r\n        localStorage.myFavoriteMoviesList && setMyFavoriteMoviesList(JSON.parse(localStorage.getItem('myFavoriteMoviesList')))\r\n    }, [checkboxActive])\r\n\r\n\r\n    // обработка запроса от формы поиска \r\n    React.useEffect(() => {\r\n        if (queryString) {\r\n            const newList = myFavoriteMoviesList.filter((movie) =>\r\n                movie.nameRU.toLowerCase().indexOf(queryString.toLowerCase()) > -1)\r\n            newList.length ?\r\n                setFavoriteListForRender(newList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setFavoriteListForRender(myFavoriteMoviesList)\r\n        }\r\n    }, [queryString, checkboxActive, myFavoriteMoviesList])\r\n\r\n\r\n    // обработка чекбокса\r\n    React.useEffect(() => {\r\n        if (checkboxActive && favoriteListForRender.length) {\r\n            const newShortList = favoriteListForRender.filter(movie => movie.duration <= 40)\r\n            newShortList.length ?\r\n                setShortFavoriteListForRender(newShortList) : setMessage('Ничего не найдено')\r\n        } else {\r\n            setShortFavoriteListForRender([])\r\n        }\r\n    }, [checkboxActive, favoriteListForRender])\r\n\r\n\r\n    const handleSubmitSearchForm = (query) => {\r\n        setMessage('')\r\n        setQueryString(query)\r\n    }\r\n\r\n\r\n    const handleCheckboxChange = (isCheckboxOn) => {\r\n        setMessage('')\r\n        setCheckboxActive(isCheckboxOn)\r\n    }\r\n\r\n\r\n    const closeInfoTooltip = () => {\r\n        setInfoTooltipOpen(false)\r\n        setMessage('')\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='movies-saved'>\r\n\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n\r\n            <SearchForm\r\n                handleSubmitSearchForm={handleSubmitSearchForm}\r\n                handleCheckboxChange={handleCheckboxChange}\r\n            />\r\n\r\n            {\r\n                infoTooltipOpen ?\r\n                    <InfoTooltip\r\n                        closePopup={closeInfoTooltip}\r\n                        icon={UnionX}\r\n                        notification={message}\r\n                    />\r\n                    :\r\n                    <MoviesCardList\r\n                        moviesList={\r\n                            shortFavoriteListForRender.length ?\r\n                                shortFavoriteListForRender\r\n                                :\r\n                                favoriteListForRender.length ?\r\n                                    favoriteListForRender\r\n                                    :\r\n                                    myFavoriteMoviesList\r\n                        }\r\n                        message={message}\r\n                    />\r\n            }\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default SavedMovies","import React from 'react'\r\nimport './Profile.css'\r\nimport Header from '../Header/Header'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\n\r\n\r\nconst Profile = React.memo(({ loggedIn, handleSubmitUpdateUser, handleLogout }) => {\r\n\r\n    const currentUser = React.useContext(CurrentUser)\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(true) // при загрузке исправить на true\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [wrongName, setWrongName] = React.useState(false)\r\n    const [wrongEmail, setWrongEmail] = React.useState(false) // ошибка результата запроса\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            setName(currentUser.name)\r\n            setEmail(currentUser.email)\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (name && email) {\r\n            wrongName || wrongEmail || (name === currentUser.name && email === currentUser.email)\r\n                ?\r\n                setButtonDisabled(true)\r\n                :\r\n                setButtonDisabled(false)\r\n        }\r\n    }, [wrongName, wrongEmail, email, name, currentUser])\r\n\r\n    const handleClick = (evt) => {\r\n        evt.preventDefault()\r\n        handleSubmitUpdateUser({ name, email })\r\n    }\r\n\r\n    const handleNameInput = (evt) => {\r\n        setName(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongName(evt.target.validationMessage)\r\n            :\r\n            setWrongName('')\r\n    }\r\n\r\n    const handleEmailInput = (evt) => {\r\n        setEmail(evt.target.value)\r\n        evt.target.validationMessage ?\r\n            setWrongEmail(evt.target.validationMessage)\r\n            :\r\n            setWrongEmail('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                loggedIn={loggedIn}\r\n            />\r\n            <section className='profile'>\r\n                <h2 className='profile__title'>Привет, {currentUser && currentUser.name}!</h2>\r\n\r\n                <form className='profile__form' onSubmit={handleClick} id='updateUser'>\r\n                    <label className='profile__label'>Имя\r\n                        <input\r\n                            id='name'\r\n                            name='name'\r\n                            type='text'\r\n                            className={`profile__input ${wrongName && 'profile__input_wrong'}`}\r\n                            value={name}\r\n                            onChange={handleNameInput}\r\n                            formNoValidate\r\n                            minLength='2'\r\n                            maxLength='30'\r\n                            pattern='^[A-Za-zА-Яа-яЁё\\s\\-]*$'\r\n                            title=\"поле может содержать только латиницу, кириллицу, пробел или дефис\"\r\n                        />\r\n                    </label>\r\n\r\n                    <label className='profile__label'>E-mail\r\n                        <input\r\n                            id='email'\r\n                            name='email'\r\n                            type='email'\r\n                            className={`profile__input ${wrongEmail && 'profile__input_wrong'}`}\r\n                            value={email}\r\n                            onChange={handleEmailInput}\r\n                            formNoValidate\r\n                            pattern='^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$'\r\n                            title=\"поле может содержать только электронный адрес\"\r\n                        />\r\n                    </label>\r\n\r\n                </form>\r\n                <>\r\n                    {\r\n                        wrongName &&\r\n                        <span className='profile__input-error name-error'>{wrongName}</span>\r\n                    }\r\n                    {\r\n                        wrongEmail &&\r\n                        <span className='profile__input-error email-error'>{wrongEmail}</span>\r\n                    }\r\n                </>\r\n\r\n                <div className='profile__bottom'>\r\n                    <button\r\n                        className={`profile__submit ${buttonDisabled && 'profile__submit_disabled'}`}\r\n                        form='updateUser'\r\n                        disabled={buttonDisabled}\r\n                        type='submit'>Редактировать\r\n                    </button>\r\n                    <button\r\n                        className='profile__submit profile__submit_color'\r\n                        onClick={handleLogout}\r\n                        type='button'>Выйти из аккаунта\r\n                    </button>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Profile","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './PageNotFound.css'\r\n\r\nconst PageNotFound = React.memo(() => {\r\n    const history = useHistory()\r\n\r\n    const handleClick = (evt) => {\r\n        evt.preventDefault()\r\n        history.go(-2)\r\n    }\r\n\r\n    return (\r\n        <div className='not-found__container'>\r\n            <h3 className='not-found__404'>404</h3>\r\n            <p className='not-found__message'>Страница не найдена</p>\r\n            <Link className='not-found__return' to='' onClick={handleClick}>Назад</Link>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PageNotFound","class MoviesApi {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`)\r\n    }\r\n\r\n    async getMovies() {\r\n        console.log('api - getMovies')\r\n        const res = await fetch(`${this._url}`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        });\r\n        return this._checkResponse(res);\r\n    }\r\n}\r\n\r\nconst moviesApi = new MoviesApi // <=  создал экзмепляр\r\n    ({\r\n        url: 'https://api.nomoreparties.co/beatfilm-movies',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n\r\nexport default moviesApi;","export default __webpack_public_path__ + \"static/media/union-v.a9eb6caf.svg\";","import React, { useEffect } from 'react'\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport './App.css'\r\nimport ProtectedRoute from '../ProtectedRoute'\r\nimport ProtectedRouteAuth from '../ProtectedRouteAuth'\r\nimport { CurrentUser } from '../../contexts/CurrentUserContext'\r\nimport Register from '../Register/Register'\r\nimport Login from '../Login/Login'\r\nimport Footer from '../Footer/Footer'\r\nimport Main from '../Main/Main'\r\nimport Movies from '../Movies/Movies'\r\nimport SavedMovies from '../MoviesSaved/MoviesSaved'\r\nimport Profile from '../Profile/Profile'\r\nimport PageNotFound from '../PageNotFound/PageNotFound'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport { register, authorize, deleteAuth, getUser, updateUser, getMyMovies } from '../../utils/MainApi'\r\nimport moviesApi from '../../utils/MoviesApi'\r\nimport { config } from '../../utils/conf'\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip'\r\nimport UnionV from '../../images/union-v.svg'\r\nimport UnionX from '../../images/union-x.svg'\r\n\r\nfunction App() {\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const [currentUser, setCurrentUser] = React.useState()\r\n  const withFooterURL = ['/', '/movies', '/saved-movies']\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n  const [infoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\r\n  const [messageErr, setMessageErr] = React.useState('')\r\n  const [err, setErr] = React.useState('')\r\n\r\n\r\n  // авторизация при возврате на сайт\r\n  React.useEffect(() => {\r\n    if (localStorage.isAuth) {\r\n      if (localStorage.currentUser && localStorage.myFavoriteMoviesList && sessionStorage.baseMoviesList) {\r\n        console.log(' => local data is true...')\r\n        setCurrentUser(JSON.parse(localStorage.getItem('currentUser')))\r\n        history.push(location.pathname) // => при непоср. переходе или обновл. - если ProtectedRoute > /signin и '/' <= location.pathname\r\n      } else {\r\n        console.log(' => getUser...')\r\n        setIsSubmitting(true)\r\n        getUser()\r\n          .then((userData) => {\r\n            setCurrentUser(userData)\r\n            localStorage.setItem('currentUser', JSON.stringify(userData))\r\n            updateMoviesLists()\r\n            history.push(location.pathname) // => при непоср. переходе или обновл. - если ProtectedRoute > /signin <= location.pathname\r\n          })\r\n          .catch(err => {\r\n            setErr(err)\r\n            history.push('/signin')\r\n          })\r\n          .finally(() => setIsSubmitting(false))\r\n      }\r\n    }\r\n  }, [])\r\n\r\n\r\n  // обработка ошибок запросов\r\n  useEffect(() => {\r\n    if (err) {\r\n      setMessageErr(`В ответе на Ваш запрос сервером возвращена ошибка - ${err}`)\r\n      setInfoTooltipOpen(true)\r\n    }\r\n  }, [err])\r\n\r\n\r\n  // авторизация пользователя на /signin\r\n  const handleLoginSubmit = ({ email, password }) => {\r\n    setIsSubmitting(true)\r\n    authorize({ email, password })\r\n      .then((userData) => {\r\n        localStorage.setItem('isAuth', true) // маркер для useEffect\r\n        setCurrentUser(userData)\r\n        localStorage.setItem('currentUser', JSON.stringify(userData))\r\n        updateMoviesLists()\r\n        history.push('/movies')\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  // регистрация пользователя\r\n  const handleRegistrationSubmit = ({ name, email, password }) => {\r\n    setIsSubmitting(true)\r\n    register({ name, email, password })\r\n      .then(() => {\r\n        setInfoTooltipOpen(true)\r\n        setTimeout(() => {\r\n          handleLoginSubmit({ email, password }) // => получить куки\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  // выйти из аккаунта\r\n  const handleLogout = () => {\r\n    setIsSubmitting(true)\r\n    deleteAuth()\r\n      .then(() => {\r\n        setCurrentUser()\r\n        localStorage.clear()\r\n        sessionStorage.clear()\r\n        history.push('/')\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  // обновить данные пользователя\r\n  const handleSubmitUpdateUser = ({ name, email }) => {\r\n    setIsSubmitting(true)\r\n    updateUser({ name, email })\r\n      .then(userData => {\r\n        setInfoTooltipOpen(true)\r\n        setCurrentUser(userData)\r\n        localStorage.setItem('currentUser', JSON.stringify(userData))\r\n        setTimeout(() => {\r\n          setInfoTooltipOpen(false)\r\n        },\r\n          2000)\r\n      })\r\n      .catch((err) => setErr(err))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  const updateMoviesLists = () => {\r\n    console.log('updateMoviesLists')\r\n    setIsSubmitting(true)\r\n\r\n    getMyMovies()\r\n      .then((myMoviesArray) => {\r\n        localStorage.setItem('myFavoriteMoviesList', JSON.stringify(myMoviesArray))\r\n\r\n        // очищать при окончания сессии веб-страницы: запрос к API при логине и при переходе с др. стр., но не при обновлении и возврте на стр. =>\r\n        if (!sessionStorage.baseMoviesList) { // <= !!! - sessionStorage (=> чаще обновлять baseMoviesList, в т.ч. при работе с разных устройств)\r\n          moviesApi.getMovies()\r\n            .then((mainMoviesArray) => {\r\n              if (myMoviesArray.length) { // если есть фильмы в избранном от API - обнов. осн. список фильмов\r\n                const temporaryList = mainMoviesArray\r\n                myMoviesArray.map((savedMovie) => {\r\n                  const movieIndex = temporaryList.findIndex(existedMovie => existedMovie.id === savedMovie.id) // => index\r\n                  movieIndex > -1 &&\r\n                    temporaryList.splice(movieIndex, 1, savedMovie) // с movieIndex удалить 1 эл-т и заменить его на savedMovie\r\n                  return temporaryList\r\n                })\r\n                sessionStorage.setItem('baseMoviesList', JSON.stringify(temporaryList)) // обновл. массив в sessionStorage <= в /movies отрисовка с уч. избранного\r\n              } else {\r\n                sessionStorage.setItem('baseMoviesList', JSON.stringify(mainMoviesArray)) // полученный без изм. массив в sessionStorage\r\n              }\r\n            })\r\n            .catch(() => {\r\n              setMessageErr(config.queryErr) // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< setErr(err))\r\n              setInfoTooltipOpen(true)\r\n            })\r\n        }\r\n      })\r\n\r\n      .catch((err) => setErr('err'))\r\n      .finally(() => setIsSubmitting(false))\r\n  }\r\n\r\n\r\n  const closePopup = () => {\r\n    setInfoTooltipOpen(false)\r\n    setMessageErr('')\r\n    setErr('')\r\n  }\r\n\r\n\r\n  return (\r\n    <CurrentUser.Provider value={currentUser}>\r\n\r\n      <div className='app'>\r\n\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Main />\r\n          </Route>\r\n\r\n          <ProtectedRoute exact path='/movies'\r\n            component={Movies}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/saved-movies'\r\n            component={SavedMovies}\r\n          />\r\n\r\n          <ProtectedRoute exact path='/profile'\r\n            component={Profile}\r\n            handleLogout={handleLogout}\r\n            handleSubmitUpdateUser={handleSubmitUpdateUser}\r\n          />\r\n\r\n          <ProtectedRouteAuth exact path='/signin'\r\n            component={Login}\r\n            handleLoginSubmit={handleLoginSubmit}\r\n            messageErr={messageErr}\r\n          />\r\n\r\n          <ProtectedRouteAuth exact path='/signup'\r\n            component={Register}\r\n            handleRegistrationSubmit={handleRegistrationSubmit}\r\n            messageErr={messageErr}\r\n          />\r\n\r\n          <Route path='*'>\r\n            <PageNotFound />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {isSubmitting && <Preloader />}\r\n\r\n        {withFooterURL.includes(location.pathname) && <Footer />}\r\n\r\n        {\r\n          infoTooltipOpen &&\r\n          <InfoTooltip\r\n            closePopup={closePopup}\r\n            icon={messageErr ? UnionX : UnionV}\r\n            notification={messageErr ? messageErr : 'Запрос выполнен успешно!'}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </CurrentUser.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}